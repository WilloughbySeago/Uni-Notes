(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    867320,      16258]
NotebookOptionsPosition[    864444,      16207]
NotebookOutlinePosition[    864879,      16224]
CellTagsIndexPosition[    864836,      16221]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "\"\<Crystallica`\>\""}]], "Input",
 CellChangeTimes->{{3.8413264828624115`*^9, 3.841326484470914*^9}, {
  3.8413265664968586`*^9, 3.841326653918556*^9}, {3.8413727061449103`*^9, 
  3.841372711104023*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"903b1411-67cb-41b7-8c98-a92115a37f26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "CrystalPlot"}]], "Input",
 CellChangeTimes->{{3.841372714834234*^9, 3.8413727234663525`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"1f5bd74a-072d-4161-997e-75c4e90f53f0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Crystallica/ref/CrystalPlot",
              ButtonNote->"paclet:Crystallica/ref/CrystalPlot"],
             "\"paclet:Crystallica/ref/CrystalPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CrystalPlot[lattvec,coord,conf] plots a crystal \
structure.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CrystalPlot", "[", 
                    RowBox[{"Crystallica`Private`lattvec_List", ",", 
                    RowBox[{"Crystallica`Private`coord_", "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`coord", ",", 
                    RowBox[{"{", 
                    RowBox[{"_List", ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Crystallica`Private`conf_", "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`conf", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ".."}], "}"}]}], "]"}]}], ",", 
                    "Crystallica`Private`rawoptions___"}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`options", ",", 
                    "Crystallica`Private`changed", ",", 
                    "Crystallica`Private`lattvecP", ",", 
                    "Crystallica`Private`coordP", ",", 
                    "Crystallica`Private`confP", ",", 
                    "Crystallica`Private`d2Q", ",", 
                    "Crystallica`Private`p3dQ", ",", 
                    "Crystallica`Private`sysdim", ",", 
                    "Crystallica`Private`atomcol", ",", 
                    "Crystallica`Private`radii", ",", 
                    "Crystallica`Private`spec", ",", 
                    "Crystallica`Private`atomfunc", ",", 
                    "Crystallica`Private`atoms", ",", 
                    "Crystallica`Private`oneplane", ",", 
                    "Crystallica`Private`planes", ",", 
                    "Crystallica`Private`polys", ",", 
                    "Crystallica`Private`addlines", ",", 
                    "Crystallica`Private`addlineorigin", ",", 
                    "Crystallica`Private`supercell", ",", 
                    "Crystallica`Private`lines", ",", 
                    "Crystallica`Private`bonds", ",", 
                    "Crystallica`Private`content", ",", 
                    "Crystallica`Private`theplot"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Entering function \
CrystalPlot[lattvec,coord,conf,rawoptions] with the following input \
values:\"", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tlattvec = \"", ",", 
                    "Crystallica`Private`lattvec"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tcoord = \"", ",", 
                    "Crystallica`Private`coord"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tconf = \"", ",", 
                    "Crystallica`Private`conf"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"CrystalPlot :: \\trawoptions = \"", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "Crystallica`Private`rawoptions", "}"}], 
                    "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`options", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "Crystallica`Private`rawoptions", "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"#1", ",", "_Rule"}], "]"}], "&"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"Crystallica`Private`options", "=", 
                    
                    RowBox[{"Crystallica`Private`options", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"D\"", "|", "\"T\""}], "\[Rule]", "\"H\""}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\"Wat\"", "|", "\"O-H\""}], "\[Rule]", "\"O\""}],
                     ",", 
                    RowBox[{"\"Vac\"", "\[Rule]", "White"}]}], "}"}]}]}], ";", 
                    RowBox[{"Crystallica`Private`options", "=", 
                    
                    RowBox[{"Crystallica`Private`options", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    
                    RowBox[{"\"darkphant\"", "|", "\"DarkPhant\"", "|", 
                    "\"Darkphant\""}], "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Indigo\"", ",", "\"Raspberry\"", ",", 
                    "\"TerreVerte\"", ",", "\"CadmiumYellow\"", ",", 
                    "\"ColdGray\"", ",", "\"BurntSienna\"", ",", 
                    "\"SeaGreen\"", ",", "\"DarkOrchid\"", ",", "\"Peacock\"",
                     ",", "\"Firebrick\""}], "}"}]}]}]}], ";", 
                    RowBox[{"Crystallica`Private`options", "=", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`options", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"\"Atoms\"", ",", "\"ColorRules\""}], "]"}]}], 
                    "/.", "\[VeryThinSpace]", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"\"Legacy\"", ",", "\"ColorRules\""}], "]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Colour parsing led to refined options \
\"", ",", "Crystallica`Private`options"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling function CrystalChange.\"", 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`changed", "=", 
                    RowBox[{"CrystalChange", "[", 
                    
                    RowBox[{"Crystallica`Private`lattvec", ",", 
                    "Crystallica`Private`coord", ",", 
                    "Crystallica`Private`conf", ",", 
                    RowBox[{"Acell", "\[Rule]", "0"}], ",", 
                    RowBox[{"NewbasisQ", "\[Rule]", "False"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Sysdim", ",", "Reshape", ",", "AddQ", ",", 
                    "RetractQ", ",", "SortQ", ",", "MoveOrigin", ",", 
                    "CenterAtOriginQ"}], "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], "}"}]}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    
                    RowBox[{"Crystallica`Private`changed", "\[Equal]", 
                    "$Failed"}], "]"}], ",", 
                    RowBox[{"Throw", "[", "$Failed", "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`lattvecP", ",", 
                    "Crystallica`Private`coordP", ",", 
                    "Crystallica`Private`confP"}], "}"}], "=", 
                    "Crystallica`Private`changed"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: CrystalChange returned structure \"", 
                    ",", "Crystallica`Private`changed"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`d2Q", "=", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "Crystallica`Private`lattvecP", 
                    "]"}], "\[Equal]", "2"}], "&&", 
                    RowBox[{
                    RowBox[{"Length", "/@", "Crystallica`Private`lattvecP"}], 
                    "\[Equal]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`p3dQ", "=", 
                    RowBox[{"Crystallica`Private`d2Q", "&&", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    
                    RowBox[{"Pseudo3DQ", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], "]"}]}]}],
                     ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`debug", "&&", 
                    "Crystallica`Private`d2Q"}], ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Check for pseudo-3D structure yielded \
\"", ",", "Crystallica`Private`p3dQ"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`p3dQ", ",", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`lattvecP", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    "Crystallica`Private`lattvecP"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`coordP", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    "Crystallica`Private`coordP"}]}], ";", 
                    RowBox[{"Crystallica`Private`d2Q", "=", "False"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Pseudo-3D lattice vectors are \"", ",", 
                    "Crystallica`Private`lattvecP"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Pseudo-3D atom coordinates are \"", ",",
                     "Crystallica`Private`coordP"}], "]"}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Check for 2D structure yielded \"", ",",
                     "Crystallica`Private`d2Q"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`sysdim", "=", 
                    RowBox[{
                    
                    RowBox[{"Sysdim", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}]}], ";", 
                    RowBox[{"Crystallica`Private`sysdim", "=", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Crystallica`Private`sysdim", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Integer"}], 
                    "}"}], ",", 
                    RowBox[{"Abs", "[", "Crystallica`Private`sysdim", "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{"Crystallica`Private`sysdim", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", "_Integer", "}"}], "|", "_Integer"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`sysdim", ",", 
                    "Crystallica`Private`sysdim", ",", 
                    "Crystallica`Private`sysdim"}], "}"}], "]"}], "]"}], ",", 
                    "_", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Option value for Sysdim resolved to \"",
                     ",", "Crystallica`Private`sysdim"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"AtomCol", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], "}"}], 
                    "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"Flatten", "[", 
                    
                    RowBox[{"Crystallica`Private`atomcol", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{
                    RowBox[{"ColorData", "[", "#1", "]"}], "/@", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0.1`", ",", "4", ",", "0.4`"}], "]"}], ",", 
                    "1.05`"}], "]"}], ",", "0.1`"}], "]"}]}]}], "&"}], ")"}], 
                    "/@", 
                    RowBox[{"ColorData", "[", "\"Gradients\"", "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`atomcol", ",", 
                    RowBox[{"{", "_Integer", "}"}]}], "]"}], ",", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"Flatten", "[", 
                    
                    RowBox[{"Crystallica`Private`atomcol", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"#1", ",", "\"ColorList\""}], "]"}]}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"ColorData", "[", "\"Indexed\"", "]"}]}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`atomcol", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"\"ReverseOxide\"", "\[Rule]", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Reverse", "[", "\"Oxide\"", "]"}], "]"}]}]}], 
                    "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"Oxide\"", "|", "\"oxide\""}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4`", ",", "0.45`", ",", "0.45`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.2`", ",", "0.2`"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"\"TernaryOxide\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4`", ",", "0.4`", ",", "0.4`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.15`", ",", "0.6`", ",", "0.6`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.2`", ",", "0.2`"}], "]"}]}], 
                    "}"}]}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"Crystallica`Private`atomcol", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorQ", "[", "#1", "]"}], "||", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"#1", ",", "_Directive"}], "]"}]}], "&"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`atomcol", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"{", "White", "}"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "Crystallica`Private`atomcol", 
                    "]"}], "<", 
                    RowBox[{"Max", "[", "Crystallica`Private`confP", "]"}]}], 
                    ",", 
                    RowBox[{"Crystallica`Private`atomcol", "=", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{"Crystallica`Private`atomcol", ",", 
                    RowBox[{"Max", "[", "Crystallica`Private`confP", "]"}], 
                    ",", 
                    
                    RowBox[{"Crystallica`Private`atomcol", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Option value for AtomCol resolved to \
\"", ",", "Crystallica`Private`atomcol"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`radii", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"AtomRad", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], "}"}], 
                    "]"}], ",", "NumericQ"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`radii", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"Crystallica`Private`radii", "=", 
                    RowBox[{"{", "0.5`", "}"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "Crystallica`Private`radii", "]"}],
                     "<", 
                    RowBox[{"Max", "[", "Crystallica`Private`confP", "]"}]}], 
                    ",", 
                    RowBox[{"Crystallica`Private`radii", "=", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{"Crystallica`Private`radii", ",", 
                    RowBox[{"Max", "[", "Crystallica`Private`confP", "]"}], 
                    ",", 
                    
                    RowBox[{"Crystallica`Private`radii", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Option value for AtomRad resolved to \
\"", ",", "Crystallica`Private`radii"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`spec", "=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`bs", "=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"BaseStyle", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Specularity", "[", 
                    RowBox[{"Gray", ",", "100"}], "]"}], "}"}]}]}], ",", 
                    RowBox[{"Specularity", "[", "__", "]"}], ",", 
                    "\[Infinity]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`bs", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"Specularity", "[", 
                    RowBox[{"Gray", ",", "100"}], "]"}], ",", 
                    
                    RowBox[{"Crystallica`Private`bs", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Plot specularity determined as \"", ",",
                     "Crystallica`Private`spec"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`atomfunc", "=", 
                    RowBox[{
                    
                    RowBox[{"AtomFunction", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    
                    RowBox[{"Crystallica`Private`atomfunc", ",", 
                    "_Function"}], "]"}]}], ",", 
                    RowBox[{"Crystallica`Private`atomfunc", "=", 
                    RowBox[{
                    RowBox[{"Ball", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\"CrystalPlot :: Option value for AtomFunction resolved \
to \"", ",", "Crystallica`Private`atomfunc"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`atoms", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`atomcol", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"Crystallica`Private`confP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Crystallica`Private`atomfunc", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`coordP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    ".", "Crystallica`Private`lattvecP"}], ",", 
                    
                    RowBox[{"Crystallica`Private`radii", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"Crystallica`Private`confP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"Crystallica`Private`atomcol", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"Crystallica`Private`confP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"Crystallica`Private`confP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    ",", "#1"}], "]"}]}], "}"}], "]"}], ",", "#1"}], "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "Crystallica`Private`confP", "]"}],
                     "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`p3dQ", "||", 
                    "Crystallica`Private`d2Q"}], ",", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`oneplane", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`h_", ",", 
                    "Crystallica`Private`k_", ",", 
                    "Crystallica`Private`l___"}], "}"}], ",", 
                    "Crystallica`Private`dist_"}], "]"}], ":=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"ContourPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`h", ",", 
                    "Crystallica`Private`k"}], "}"}], ".", 
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`x", ",", 
                    "Crystallica`Private`y"}], "}"}]}], "\[Equal]", 
                    "Crystallica`Private`dist"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`x", ",", "0", ",", 
                    
                    RowBox[{"Crystallica`Private`sysdim", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`y", ",", "0", ",", 
                    
                    RowBox[{"Crystallica`Private`sysdim", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "ContourPlot", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                    RowBox[{"ContourLabels", "\[Rule]", "False"}], ",", 
                    RowBox[{"ContourStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"GraphicsComplex", "[", 
                    
                    RowBox[{"Crystallica`Private`x_", ",", 
                    "Crystallica`Private`y__"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"GraphicsComplex", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`p3dQ", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{"Crystallica`Private`x", ".", 
                    
                    RowBox[{"Crystallica`Private`lattvec", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    
                    RowBox[{"Crystallica`Private`x", ".", 
                    "Crystallica`Private`lattvec"}]}], "]"}], ",", 
                    "Crystallica`Private`y"}], "]"}]}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`oneplane", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`h_", ",", 
                    "Crystallica`Private`k_", ",", "Crystallica`Private`l_"}],
                     "}"}], ",", "Crystallica`Private`dist_"}], "]"}], ":=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"ContourPlot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`h", ",", 
                    "Crystallica`Private`k", ",", "Crystallica`Private`l"}], 
                    "}"}], ".", 
                    RowBox[{"{", 
                    
                    RowBox[{"Crystallica`Private`x", ",", 
                    "Crystallica`Private`y", ",", "Crystallica`Private`z"}], 
                    "}"}]}], "\[Equal]", "Crystallica`Private`dist"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`x", ",", "0", ",", 
                    
                    RowBox[{"Crystallica`Private`sysdim", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`y", ",", "0", ",", 
                    
                    RowBox[{"Crystallica`Private`sysdim", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Crystallica`Private`z", ",", "0", ",", 
                    RowBox[{"Crystallica`Private`sysdim", 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "ContourPlot3D", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                    RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"ContourStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "}"}]}]}], 
                    "}"}]}], "]"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"GraphicsComplex", "[", 
                    
                    RowBox[{"Crystallica`Private`x_", ",", 
                    "Crystallica`Private`y__"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"GraphicsComplex", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`x", ".", 
                    "Crystallica`Private`lattvec"}], ",", 
                    "Crystallica`Private`y"}], "]"}]}]}], "]"}]}]}], "]"}], 
                    ";", 
                    RowBox[{"Crystallica`Private`planes", "=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Crystallica`Private`oneplane", ",", 
                    RowBox[{
                    
                    RowBox[{"LatticePlanes", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`polys", "=", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"PolyMode", "[", "_", "]"}]}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`polys", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`polys", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    
                    RowBox[{"Crystallica`Private`polys", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`polys", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`d2Q", "||", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`polys", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling function PolyPlot.\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Crystallica`Private`PolyPlot", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`coordP", ".", 
                    "Crystallica`Private`lattvec"}], ",", 
                    "Crystallica`Private`confP", ",", "#1", ",", 
                    "Crystallica`Private`atomcol", ",", 
                    "Crystallica`Private`options"}], "]"}]}], ")"}], "&"}], 
                    ")"}], "/@", "Crystallica`Private`polys"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"Crystallica`Private`addlines", "=", 
                    RowBox[{
                    
                    RowBox[{"CellLinesAdd", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "CrystalPlot", "]"}], ",", 
                    "CellLinesAdd"}], "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"Crystallica`Private`addlines", "\[Equal]", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`addlines", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "\[Equal]", "\"multi\""}], "]"}], ",", 
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", "Crystallica`Private`addlines", "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    "]"}], "\[Equal]", "1"}], "]"}], "||", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    "_Rule"}], "]"}]}], ",", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`d2Q", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
                    "2"}], "]"}]}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    
                    RowBox[{"Length", "[", "Crystallica`Private`addlines", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`addlineorigin", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"#1", ",", "_Integer"}], "]"}], "&&", 
                    RowBox[{"#1", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "Crystallica`Private`confP", 
                    "]"}]}]}], ",", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`coordP", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    ".", "Crystallica`Private`lattvec"}], ",", 
                    RowBox[{"#1", ".", "Crystallica`Private`lattvec"}]}], 
                    "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling function LinePlot.\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Crystallica`Private`addlines", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`LinePlot", "[", 
                    RowBox[{
                    RowBox[{"CrystalChange", "[", 
                    RowBox[{
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Acell", "\[Rule]", "0"}]}], "]"}], ",", 
                    "Crystallica`Private`d2Q", ",", 
                    "Crystallica`Private`p3dQ", ",", 
                    RowBox[{
                    RowBox[{"Sysdim", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", 
                    RowBox[{"3", ";;", "All"}]}], "\[RightDoubleBracket]"}]}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"Sysdim", "\[Rule]", 
                    "Crystallica`Private`sysdim"}]}], ",", 
                    
                    RowBox[{"Crystallica`Private`addlines", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", 
                    RowBox[{"3", ";;", "All"}]}], "\[RightDoubleBracket]"}]}],
                     "]"}], ",", 
                    
                    RowBox[{"Crystallica`Private`addlineorigin", 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}]}],
                     "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    
                    RowBox[{"Length", "[", "Crystallica`Private`addlines", 
                    "]"}], "]"}]}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`supercell", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ButtonQ", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Epilog", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"Paste supercell data\"", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "All"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
                     ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"ColorData", "[", 
                    RowBox[{"\"Legacy\"", ",", "\"Gainsboro\""}], "]"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"\"MouseClicked\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{
                    RowBox[{"ButtonNotebook", "[", "]"}], ",", "After", ",", 
                    "ButtonCell"}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{
                    RowBox[{"ButtonNotebook", "[", "]"}], ",", 
                    RowBox[{"ToBoxes", "[", 
                    RowBox[{"CrystalChange", "[", 
                    
                    RowBox[{"Crystallica`Private`lattvec", ",", 
                    "Crystallica`Private`coord", ",", 
                    "Crystallica`Private`conf", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "CrystalChange", "]"}]}], "]"}]}],
                     "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
                    RowBox[{"PassEventsDown", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"PassEventsUp", "\[Rule]", "True"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Bottom"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Bottom"}], "}"}]}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling function LinePlot.\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Crystallica`Private`lines", "=", 
                    RowBox[{"Crystallica`Private`LinePlot", "[", 
                    
                    RowBox[{"Crystallica`Private`lattvecP", ",", 
                    "Crystallica`Private`d2Q", ",", 
                    "Crystallica`Private`p3dQ", ",", 
                    "Crystallica`Private`sysdim", ",", 
                    "Crystallica`Private`options"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling function BondPlot.\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Crystallica`Private`bonds", "=", 
                    RowBox[{"Crystallica`Private`BondPlot", "[", 
                    
                    RowBox[{"Crystallica`Private`lattvecP", ",", 
                    "Crystallica`Private`coordP", ",", 
                    "Crystallica`Private`confP", ",", 
                    "Crystallica`Private`d2Q", ",", 
                    "Crystallica`Private`spec", ",", 
                    "Crystallica`Private`atomcol", ",", 
                    "Crystallica`Private`options"}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`content", "=", 
                    RowBox[{"Join", "[", 
                    
                    RowBox[{"Crystallica`Private`lines", ",", 
                    "Crystallica`Private`addlines", ",", 
                    "Crystallica`Private`planes", ",", 
                    "Crystallica`Private`bonds", ",", 
                    "Crystallica`Private`atoms", ",", 
                    "Crystallica`Private`polys"}], "]"}]}], ";", 
                    RowBox[{"Crystallica`Private`theplot", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`d2Q", ",", 
                    RowBox[{"Graphics", "[", 
                    
                    RowBox[{"Crystallica`Private`content", ",", 
                    "Crystallica`Private`supercell", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Graphics3D", "[", 
                    
                    RowBox[{"Crystallica`Private`content", ",", 
                    "Crystallica`Private`supercell", ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "Crystallica`Private`spec", "}"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"BaseStyle", "/.", "\[VeryThinSpace]", 
                    "Crystallica`Private`options"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "}"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{"Crystallica`Private`options", ",", 
                    RowBox[{"Options", "[", "Graphics3D", "]"}]}], "]"}], ",", 
                    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
                    RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
                    RowBox[{"Lighting", "\[Rule]", "\"Neutral\""}]}], "]"}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Exiting function CrystalPlot and \
returning to calling function or to user.\"", "]"}]}], "]"}], ";", 
                    "Crystallica`Private`theplot"}]}], "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"CrystalPlot", "[", 
                    RowBox[{
                    RowBox[{"Crystallica`Private`coord_", "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`coord", ",", 
                    RowBox[{"{", 
                    RowBox[{"_List", ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Crystallica`Private`conf_", "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`conf", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ".."}], "}"}]}], "]"}]}], ",", 
                    "Crystallica`Private`options___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Crystallica`Private`plot", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Entering function \
CrystalPlot[coord,conf,options] with the following input values:\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tcoord = \"", ",", 
                    "Crystallica`Private`coord"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tconf = \"", ",", 
                    "Crystallica`Private`conf"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"CrystalPlot :: \\toptions = \"", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "Crystallica`Private`options", "}"}], 
                    "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling new instance of function \
CrystalPlot with different input.\"", "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`plot", "=", 
                    RowBox[{"CrystalPlot", "[", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"Crystallica`Private`coord", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], "]"}], ",", "Crystallica`Private`coord", ",", 
                    "Crystallica`Private`conf", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Reshape", "\[Rule]", 
                    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
                    RowBox[{"Sysdim", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"CenterAtOriginQ", "\[Rule]", "False"}], ",", 
                    RowBox[{"BondsExtendQ", "\[Rule]", "False"}], ",", 
                    RowBox[{"MoveOrigin", "\[Rule]", "False"}], ",", 
                    RowBox[{"CellLineStyle", "\[Rule]", "False"}], ",", 
                    RowBox[{"AddQ", "\[Rule]", "False"}], ",", 
                    RowBox[{"RetractQ", "\[Rule]", "False"}], ",", 
                    RowBox[{"ButtonQ", "\[Rule]", "False"}], ",", 
                    "Crystallica`Private`options"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Exiting function CrystalPlot and \
returning to calling function or to user.\"", "]"}]}], "]"}], ";", 
                    "Crystallica`Private`plot"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"CrystalPlot", "[", 
                    
                    RowBox[{
                    "Crystallica`Private`lattvec_List", ",", 
                    "Crystallica`Private`options___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Crystallica`Private`plot", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Entering function \
CrystalPlot[lattvec,options] with the following input values:\"", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\"CrystalPlot :: \\tlattvec = \"", ",", 
                    "Crystallica`Private`lattvec"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"CrystalPlot :: \\toptions = \"", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "Crystallica`Private`options", "}"}], 
                    "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Calling new instance of function \
CrystalPlot with different input.\"", "]"}]}], "]"}], ";", 
                    RowBox[{"Crystallica`Private`plot", "=", 
                    RowBox[{"CrystalPlot", "[", 
                    RowBox[{"Crystallica`Private`lattvec", ",", 
                    RowBox[{"{", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"Crystallica`Private`lattvec", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "}"}], 
                    ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"BondStyle", "\[Rule]", "False"}], ",", 
                    RowBox[{"AtomRad", "\[Rule]", "0"}], ",", 
                    "Crystallica`Private`options"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Crystallica`Private`debug", ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"CrystalPlot :: Exiting function CrystalPlot and \
returning to calling function or to user.\"", "]"}]}], "]"}], ";", 
                    "Crystallica`Private`plot"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:Crystallica/ref/CrystalPlot", 
                    "paclet:Crystallica/ref/CrystalPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Acell", "\[Rule]", "0"}]},
                    {
                    RowBox[{"AddQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"CenterAtOriginQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"MoveOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]},
                    {
                    RowBox[{"NewbasisQ", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RetractQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"SortQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Sysdim", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]},
                    {
                    RowBox[{"Reshape", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]},
                    {
                    RowBox[{"AtomCol", "\[Rule]", "97"}]},
                    {
                    RowBox[{"AtomFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ball", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ")"}]}]},
                    {
                    RowBox[{"AtomRad", "\[Rule]", "0.5`"}]},
                    {
                    RowBox[{"BondCol", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.33333333333333337`],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0.5],
                    Editable->False,
                    Selectable->False]}]},
                    {
                    RowBox[{"BondDist", "\[Rule]", "2.1`"}]},
                    {
                    RowBox[{"BondRad", "\[Rule]", "0.15`"}]},
                    {
                    RowBox[{"BondRadScaledQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"BondStyle", "\[Rule]", "1"}]},
                    {
                    RowBox[{"BondsExtendQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"BondsFlatQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ButtonQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"CellLineCol", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}]},
                    {
                    RowBox[{"CellLineRad", "\[Rule]", "0.02`"}]},
                    {
                    RowBox[{"CellLineStyle", "\[Rule]", "1"}]},
                    {
                    RowBox[{"CellLinesAdd", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"CellLinesFlatQ", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ForceBonds", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ForceNoBonds", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LatticePlanes", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Pseudo3DQ", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "29", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Acell", "\[Rule]", "0"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "29", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Crystallica`CrystalPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Crystallica/ref/CrystalPlot",
              ButtonNote->"paclet:Crystallica/ref/CrystalPlot"],
             "\"paclet:Crystallica/ref/CrystalPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CrystalPlot[lattvec,coord,conf] plots a crystal \
structure.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "CrystalPlot[lattvec,coord,conf] plots a crystal structure.", 
    "Documentation" -> 
    Association["Local" -> "paclet:Crystallica/ref/CrystalPlot"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Crystallica`CrystalPlot, {Crystallica`CrystalPlot[
         Pattern[Crystallica`Private`lattvec, 
          Blank[List]], 
         Condition[
          Pattern[Crystallica`Private`coord, 
           Blank[]], 
          MatchQ[Crystallica`Private`coord, {
            Repeated[
             Blank[List]]}]], 
         Condition[
          Pattern[Crystallica`Private`conf, 
           Blank[]], 
          MatchQ[Crystallica`Private`conf, {
            Repeated[
             Blank[Integer]]}]], 
         Pattern[Crystallica`Private`rawoptions, 
          BlankNullSequence[]]] :> Catch[
         Module[{
          Crystallica`Private`options, Crystallica`Private`changed, 
           Crystallica`Private`lattvecP, Crystallica`Private`coordP, 
           Crystallica`Private`confP, Crystallica`Private`d2Q, 
           Crystallica`Private`p3dQ, Crystallica`Private`sysdim, 
           Crystallica`Private`atomcol, Crystallica`Private`radii, 
           Crystallica`Private`spec, Crystallica`Private`atomfunc, 
           Crystallica`Private`atoms, Crystallica`Private`oneplane, 
           Crystallica`Private`planes, Crystallica`Private`polys, 
           Crystallica`Private`addlines, Crystallica`Private`addlineorigin, 
           Crystallica`Private`supercell, Crystallica`Private`lines, 
           Crystallica`Private`bonds, Crystallica`Private`content, 
           Crystallica`Private`theplot}, If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Entering function \
CrystalPlot[lattvec,coord,conf,rawoptions] with the following input \
values:"]]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: \tlattvec = ", Crystallica`Private`lattvec]]; 
          If[Crystallica`Private`debug, 
            Print["CrystalPlot :: \tcoord = ", Crystallica`Private`coord]]; 
          If[Crystallica`Private`debug, 
            Print["CrystalPlot :: \tconf = ", Crystallica`Private`conf]]; 
          If[Crystallica`Private`debug, 
            Print["CrystalPlot :: \trawoptions = ", 
             Flatten[{Crystallica`Private`rawoptions}]]]; 
          Crystallica`Private`options = Select[
             Flatten[{Crystallica`Private`rawoptions}], MatchQ[#, 
              Blank[Rule]]& ]; 
          Crystallica`Private`options = 
           ReplaceAll[
            Crystallica`Private`options, {
             Alternatives["D", "T"] -> "H", Alternatives["Wat", "O-H"] -> "O",
               "Vac" -> White}]; 
          Crystallica`Private`options = 
           ReplaceAll[
            Crystallica`Private`options, 
             Alternatives["darkphant", "DarkPhant", "Darkphant"] -> {
              "Indigo", "Raspberry", "TerreVerte", "CadmiumYellow", 
               "ColdGray", "BurntSienna", "SeaGreen", "DarkOrchid", "Peacock",
                "Firebrick"}]; Crystallica`Private`options = ReplaceAll[
             ReplaceAll[Crystallica`Private`options, 
              ColorData["Atoms", "ColorRules"]], 
             ColorData["Legacy", "ColorRules"]]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Colour parsing led to refined options ", 
             Crystallica`Private`options]]; If[Crystallica`Private`debug, 
            Print["CrystalPlot :: Calling function CrystalChange."]]; 
          Crystallica`Private`changed = 
           Crystallica`CrystalChange[
            Crystallica`Private`lattvec, Crystallica`Private`coord, 
             Crystallica`Private`conf, Crystallica`Acell -> 0, 
             Crystallica`NewbasisQ -> False, 
             Map[
             FilterRules[#, {
               Crystallica`Sysdim, Crystallica`Reshape, Crystallica`AddQ, 
                Crystallica`RetractQ, Crystallica`SortQ, 
                Crystallica`MoveOrigin, Crystallica`CenterAtOriginQ}]& , {
              Crystallica`Private`options, 
               Options[Crystallica`CrystalPlot]}]]; If[
            TrueQ[Crystallica`Private`changed == $Failed], 
            
            Throw[$Failed], {
             Crystallica`Private`lattvecP, Crystallica`Private`coordP, 
              Crystallica`Private`confP} = Crystallica`Private`changed]; 
          If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: CrystalChange returned structure ", 
             Crystallica`Private`changed]]; Crystallica`Private`d2Q = TrueQ[
             And[
             Length[Crystallica`Private`lattvecP] == 2, 
              Map[Length, Crystallica`Private`lattvecP] == {2, 2}]]; 
          Crystallica`Private`p3dQ = And[Crystallica`Private`d2Q, 
             TrueQ[
              ReplaceAll[
               ReplaceAll[Crystallica`Pseudo3DQ, Crystallica`Private`options], 
               Options[Crystallica`CrystalPlot]]]]; If[
            And[Crystallica`Private`debug, Crystallica`Private`d2Q], 
            Print[
            "CrystalPlot :: Check for pseudo-3D structure yielded ", 
             Crystallica`Private`p3dQ]]; 
          If[Crystallica`Private`p3dQ, Crystallica`Private`lattvecP = Join[
               Map[Join[#, {0}]& , Crystallica`Private`lattvecP], {{0, 0, 
               1}}]; Crystallica`Private`coordP = 
             Map[Join[#, {0}]& , Crystallica`Private`coordP]; 
            Crystallica`Private`d2Q = False; If[Crystallica`Private`debug, 
              Print[
              "CrystalPlot :: Pseudo-3D lattice vectors are ", 
               Crystallica`Private`lattvecP]]; If[Crystallica`Private`debug, 
              Print[
              "CrystalPlot :: Pseudo-3D atom coordinates are ", 
               Crystallica`Private`coordP]]]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Check for 2D structure yielded ", 
             Crystallica`Private`d2Q]]; 
          Crystallica`Private`sysdim = ReplaceAll[
             ReplaceAll[Crystallica`Sysdim, Crystallica`Private`options], 
             Options[Crystallica`CrystalPlot]]; 
          Crystallica`Private`sysdim = Switch[Crystallica`Private`sysdim, {
              Blank[Integer], 
              Blank[Integer], 
              Blank[Integer]}, 
             Abs[Crystallica`Private`sysdim], {
              Blank[Integer], 
              Blank[Integer]}, 
             Abs[
              Join[Crystallica`Private`sysdim, {1}]], 
             Alternatives[{
               Blank[Integer]}, 
              Blank[Integer]], 
             Flatten[
              
              Abs[{Crystallica`Private`sysdim, Crystallica`Private`sysdim, 
                Crystallica`Private`sysdim}]], 
             Blank[], {1, 1, 1}]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Option value for Sysdim resolved to ", 
             Crystallica`Private`sysdim]]; 
          Crystallica`Private`atomcol = Flatten[{
              ReplaceAll[
               ReplaceAll[Crystallica`AtomCol, Crystallica`Private`options], 
               Options[Crystallica`CrystalPlot]]}]; 
          Crystallica`Private`atomcol = Flatten[
             ReplaceAll[Crystallica`Private`atomcol, 
              Map[# -> Map[
                 ColorData[#], 
                 Round[
                  Mod[
                   Range[0.1, 4, 0.4], 1.05], 0.1]]& , 
               ColorData["Gradients"]]]]; If[
            MatchQ[Crystallica`Private`atomcol, {
              Blank[Integer]}], Crystallica`Private`atomcol = Flatten[
              ReplaceAll[Crystallica`Private`atomcol, 
               Map[# -> ColorData[#, "ColorList"]& , 
                ColorData["Indexed"]]]]]; 
          Crystallica`Private`atomcol = Flatten[
             ReplaceAll[
              ReplaceAll[Crystallica`Private`atomcol, "ReverseOxide" -> Quiet[
                 Reverse["Oxide"]]], {Alternatives["Oxide", "oxide"] -> {
                 RGBColor[0.4, 0.45, 0.45], 
                 RGBColor[0.8, 0.2, 0.2]}, "TernaryOxide" -> {
                 RGBColor[0.4, 0.4, 0.4], 
                 RGBColor[0.15, 0.6, 0.6], 
                 RGBColor[0.8, 0.2, 0.2]}}]]; 
          Crystallica`Private`atomcol = Select[Crystallica`Private`atomcol, Or[
              ColorQ[#], 
              MatchQ[#, 
               Blank[Directive]]]& ]; If[
            TrueQ[Crystallica`Private`atomcol == {}], 
            Crystallica`Private`atomcol = {White}]; 
          If[
           Length[Crystallica`Private`atomcol] < 
            Max[Crystallica`Private`confP], Crystallica`Private`atomcol = 
            PadRight[Crystallica`Private`atomcol, 
              Max[Crystallica`Private`confP], 
              Part[Crystallica`Private`atomcol, -1]]]; 
          If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Option value for AtomCol resolved to ", 
             Crystallica`Private`atomcol]]; Crystallica`Private`radii = Select[
             Flatten[{
               ReplaceAll[
                ReplaceAll[Crystallica`AtomRad, Crystallica`Private`options], 
                Options[Crystallica`CrystalPlot]]}], NumericQ]; If[
            TrueQ[Crystallica`Private`radii == {}], 
            Crystallica`Private`radii = {0.5}]; 
          If[Length[Crystallica`Private`radii] < 
            Max[Crystallica`Private`confP], Crystallica`Private`radii = 
            PadRight[Crystallica`Private`radii, 
              Max[Crystallica`Private`confP], 
              Part[Crystallica`Private`radii, -1]]]; 
          If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Option value for AtomRad resolved to ", 
             Crystallica`Private`radii]]; 
          Crystallica`Private`spec = With[{Crystallica`Private`bs = Cases[
                ReplaceAll[
                 ReplaceAll[BaseStyle, Crystallica`Private`options], 
                 BaseStyle -> {
                   Specularity[Gray, 100]}], 
                Specularity[
                 BlankSequence[]], Infinity]}, 
             If[
              TrueQ[Crystallica`Private`bs == {}], 
              Specularity[Gray, 100], 
              Part[Crystallica`Private`bs, 1]]]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Plot specularity determined as ", 
             Crystallica`Private`spec]]; 
          Crystallica`Private`atomfunc = ReplaceAll[
             ReplaceAll[
             Crystallica`AtomFunction, Crystallica`Private`options], 
             Options[Crystallica`CrystalPlot]]; If[
            Not[
             MatchQ[Crystallica`Private`atomfunc, 
              Blank[Function]]], Crystallica`Private`atomfunc = 
            Ball[#, #2]& ]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Option value for AtomFunction resolved to ", 
             Crystallica`Private`atomfunc]]; 
          Crystallica`Private`atoms = Map[Tooltip[
              Flatten[{
                Part[Crystallica`Private`atomcol, 
                 Part[Crystallica`Private`confP, #]], 
                Crystallica`Private`atomfunc[
                 Dot[
                  Part[Crystallica`Private`coordP, #], 
                  Crystallica`Private`lattvecP], 
                 Part[Crystallica`Private`radii, 
                  Part[Crystallica`Private`confP, #]], 
                 Part[Crystallica`Private`atomcol, 
                  Part[Crystallica`Private`confP, #]], 
                 Part[Crystallica`Private`confP, #], #]}], #]& , 
             Range[
              Length[Crystallica`Private`confP]]]; If[
            Or[Crystallica`Private`p3dQ, Crystallica`Private`d2Q], 
            Crystallica`Private`oneplane[{
               Pattern[Crystallica`Private`h, 
                Blank[]], 
               Pattern[Crystallica`Private`k, 
                Blank[]], 
               Pattern[Crystallica`Private`l, 
                BlankNullSequence[]]}, 
              Pattern[Crystallica`Private`dist, 
               Blank[]]] := Cases[
              ContourPlot[
              Dot[{Crystallica`Private`h, Crystallica`Private`k}, {
                 Crystallica`Private`x, Crystallica`Private`y}] == 
               Crystallica`Private`dist, {Crystallica`Private`x, 0, 
                Part[Crystallica`Private`sysdim, 1]}, {
               Crystallica`Private`y, 0, 
                Part[Crystallica`Private`sysdim, 2]}, 
               Evaluate[
                Apply[Sequence, 
                 Join[
                  FilterRules[Crystallica`Private`options, 
                   Options[ContourPlot]], {
                  Mesh -> False, ContourLabels -> False, 
                   ContourStyle -> {Thick, Red}}]]]], GraphicsComplex[
                Pattern[Crystallica`Private`x, 
                 Blank[]], 
                Pattern[Crystallica`Private`y, 
                 BlankSequence[]]] :> GraphicsComplex[
                If[Crystallica`Private`p3dQ, 
                 Map[Join[#, {0}]& , 
                  Dot[Crystallica`Private`x, 
                   Part[Crystallica`Private`lattvec, {1, 2}, {1, 2}]]], 
                 Dot[Crystallica`Private`x, Crystallica`Private`lattvec]], 
                Crystallica`Private`y]], Crystallica`Private`oneplane[{
               Pattern[Crystallica`Private`h, 
                Blank[]], 
               Pattern[Crystallica`Private`k, 
                Blank[]], 
               Pattern[Crystallica`Private`l, 
                Blank[]]}, 
              Pattern[Crystallica`Private`dist, 
               Blank[]]] := Cases[
              ContourPlot3D[
              Dot[{Crystallica`Private`h, Crystallica`Private`k, 
                  Crystallica`Private`l}, {
                 Crystallica`Private`x, Crystallica`Private`y, 
                  Crystallica`Private`z}] == Crystallica`Private`dist, {
               Crystallica`Private`x, 0, 
                Part[Crystallica`Private`sysdim, 1]}, {
               Crystallica`Private`y, 0, 
                Part[Crystallica`Private`sysdim, 2]}, {
               Crystallica`Private`z, 0, 
                Part[Crystallica`Private`sysdim, 3]}, 
               Evaluate[
                Apply[Sequence, 
                 Join[
                  FilterRules[Crystallica`Private`options, 
                   Options[ContourPlot3D]], {
                  Mesh -> False, BoundaryStyle -> None, ContourStyle -> {Red, 
                    Opacity[0.5]}}]]]], GraphicsComplex[
                Pattern[Crystallica`Private`x, 
                 Blank[]], 
                Pattern[Crystallica`Private`y, 
                 BlankSequence[]]] :> GraphicsComplex[
                Dot[Crystallica`Private`x, Crystallica`Private`lattvec], 
                Crystallica`Private`y]]]; 
          Crystallica`Private`planes = Apply[Crystallica`Private`oneplane, 
             ReplaceAll[
              ReplaceAll[
              Crystallica`LatticePlanes, Crystallica`Private`options], 
              Options[Crystallica`CrystalPlot]], {1}]; 
          Crystallica`Private`polys = FilterRules[Crystallica`Private`options, 
             Crystallica`PolyMode[
              Blank[]]]; Crystallica`Private`polys = If[
             TrueQ[Crystallica`Private`polys == {}], {}, 
             Part[Crystallica`Private`polys, All, 1, 1]]; 
          Crystallica`Private`polys = If[
             Or[Crystallica`Private`d2Q, 
              TrueQ[Crystallica`Private`polys == {}]], {}, 
             Map[(If[Crystallica`Private`debug, 
                Print["CrystalPlot :: Calling function PolyPlot."]]; 
              Crystallica`Private`PolyPlot[
                Dot[Crystallica`Private`coordP, Crystallica`Private`lattvec], 
                Crystallica`Private`confP, #, Crystallica`Private`atomcol, 
                Crystallica`Private`options])& , Crystallica`Private`polys]]; 
          Crystallica`Private`addlines = ReplaceAll[
             ReplaceAll[
             Crystallica`CellLinesAdd, Crystallica`Private`options], 
             FilterRules[
              Options[Crystallica`CrystalPlot], Crystallica`CellLinesAdd]]; If[
            Not[
             TrueQ[Crystallica`Private`addlines == {}]], 
            Crystallica`Private`addlines = If[
               TrueQ[Part[Crystallica`Private`addlines, 1] == "multi"], 
               Part[Crystallica`Private`addlines, 
                Span[2, All]], {Crystallica`Private`addlines}]; Map[If[
               Or[
                TrueQ[Length[
                   Part[Crystallica`Private`addlines, #]] == 1], 
                MatchQ[
                 Part[Crystallica`Private`addlines, #, 2], 
                 Blank[Rule]]], Part[Crystallica`Private`addlines, #] = Insert[
                 Part[Crystallica`Private`addlines, #], 
                 If[Crystallica`Private`d2Q, {0, 0}, {0, 0, 0}], 2]]& , 
              Range[
               Length[Crystallica`Private`addlines]]]; 
            Crystallica`Private`addlineorigin = Map[If[
                And[
                 MatchQ[#, 
                  Blank[Integer]], # <= Length[Crystallica`Private`confP]], 
                Dot[
                 Part[Crystallica`Private`coordP, #], 
                 Crystallica`Private`lattvec], 
                Dot[#, Crystallica`Private`lattvec]]& , 
               Part[Crystallica`Private`addlines, All, 2]]; 
            If[Crystallica`Private`debug, 
              Print["CrystalPlot :: Calling function LinePlot."]]; 
            Crystallica`Private`addlines = Map[Translate[
                Crystallica`Private`LinePlot[
                 Crystallica`CrystalChange[
                  Part[Crystallica`Private`addlines, #, 1], Crystallica`Acell -> 
                  0], Crystallica`Private`d2Q, Crystallica`Private`p3dQ, 
                 ReplaceAll[
                  ReplaceAll[Crystallica`Sysdim, 
                   Part[Crystallica`Private`addlines, #, 
                    Span[3, All]]], Crystallica`Sysdim -> 
                  Crystallica`Private`sysdim], 
                 Part[Crystallica`Private`addlines, #, 
                  Span[3, All]]], 
                Part[Crystallica`Private`addlineorigin, #]]& , 
               Range[
                Length[Crystallica`Private`addlines]]]; Null]; 
          Crystallica`Private`supercell = If[
             TrueQ[
              ReplaceAll[
               ReplaceAll[Crystallica`ButtonQ, Crystallica`Private`options], 
               Options[Crystallica`CrystalPlot]]], Epilog -> {
               ReplaceAll[
                ReplaceAll[Epilog, Crystallica`Private`options], 
                Epilog -> {}], 
               Inset[
                EventHandler[
                 Button[
                 "Paste supercell data", ImageSize -> All, 
                  FrameMargins -> {{20, 20}, {Automatic, Automatic}}, 
                  Background -> ColorData["Legacy", "Gainsboro"]], 
                 "MouseClicked" :> (SelectionMove[
                    ButtonNotebook[], After, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    ToBoxes[
                    Crystallica`CrystalChange[
                    Crystallica`Private`lattvec, Crystallica`Private`coord, 
                    Crystallica`Private`conf, 
                    FilterRules[Crystallica`Private`options, 
                    Options[Crystallica`CrystalChange]]]]]), PassEventsDown -> 
                 Automatic, PassEventsUp -> True], {Center, Bottom}, {
                Center, Bottom}]}, {}]; If[Crystallica`Private`debug, 
            Print["CrystalPlot :: Calling function LinePlot."]]; 
          Crystallica`Private`lines = 
           Crystallica`Private`LinePlot[
            Crystallica`Private`lattvecP, Crystallica`Private`d2Q, 
             Crystallica`Private`p3dQ, Crystallica`Private`sysdim, 
             Crystallica`Private`options]; If[Crystallica`Private`debug, 
            Print["CrystalPlot :: Calling function BondPlot."]]; 
          Crystallica`Private`bonds = 
           Crystallica`Private`BondPlot[
            Crystallica`Private`lattvecP, Crystallica`Private`coordP, 
             Crystallica`Private`confP, Crystallica`Private`d2Q, 
             Crystallica`Private`spec, Crystallica`Private`atomcol, 
             Crystallica`Private`options]; 
          Crystallica`Private`content = 
           Join[Crystallica`Private`lines, Crystallica`Private`addlines, 
             Crystallica`Private`planes, Crystallica`Private`bonds, 
             Crystallica`Private`atoms, Crystallica`Private`polys]; 
          Crystallica`Private`theplot = If[Crystallica`Private`d2Q, 
             Graphics[
             Crystallica`Private`content, Crystallica`Private`supercell, 
              FilterRules[Crystallica`Private`options, 
               Options[Graphics]]], 
             Graphics3D[
             Crystallica`Private`content, Crystallica`Private`supercell, 
              BaseStyle -> Join[{Crystallica`Private`spec}, 
                Flatten[{
                  ReplaceAll[
                   ReplaceAll[BaseStyle, Crystallica`Private`options], 
                   BaseStyle -> {}]}]], 
              FilterRules[Crystallica`Private`options, 
               Options[Graphics3D]], Boxed -> False, SphericalRegion -> True, 
              Lighting -> "Neutral"]]; If[Crystallica`Private`debug, 
            Print[
            "CrystalPlot :: Exiting function CrystalPlot and returning to \
calling function or to user."]]; Crystallica`Private`theplot]], 
       Crystallica`CrystalPlot[
         Condition[
          Pattern[Crystallica`Private`coord, 
           Blank[]], 
          MatchQ[Crystallica`Private`coord, {
            Repeated[
             Blank[List]]}]], 
         Condition[
          Pattern[Crystallica`Private`conf, 
           Blank[]], 
          MatchQ[Crystallica`Private`conf, {
            Repeated[
             Blank[Integer]]}]], 
         Pattern[Crystallica`Private`options, 
          BlankNullSequence[]]] :> 
       Module[{Crystallica`Private`plot}, If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Entering function CrystalPlot[coord,conf,options] \
with the following input values:"]]; If[Crystallica`Private`debug, 
           Print["CrystalPlot :: \tcoord = ", Crystallica`Private`coord]]; 
         If[Crystallica`Private`debug, 
           Print["CrystalPlot :: \tconf = ", Crystallica`Private`conf]]; 
         If[Crystallica`Private`debug, 
           Print["CrystalPlot :: \toptions = ", 
            Flatten[{Crystallica`Private`options}]]]; 
         If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Calling new instance of function CrystalPlot with \
different input."]]; Crystallica`Private`plot = Crystallica`CrystalPlot[
            IdentityMatrix[
             Length[
              Part[Crystallica`Private`coord, 1]]], Crystallica`Private`coord,
             Crystallica`Private`conf, {
            Crystallica`Reshape -> IdentityMatrix[3], 
             Crystallica`Sysdim -> {1, 1, 1}, Crystallica`CenterAtOriginQ -> 
             False, Crystallica`BondsExtendQ -> False, Crystallica`MoveOrigin -> 
             False, Crystallica`CellLineStyle -> False, Crystallica`AddQ -> 
             False, Crystallica`RetractQ -> False, Crystallica`ButtonQ -> 
             False, Crystallica`Private`options}]; 
         If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Exiting function CrystalPlot and returning to \
calling function or to user."]]; Crystallica`Private`plot], 
       Crystallica`CrystalPlot[
         Pattern[Crystallica`Private`lattvec, 
          Blank[List]], 
         Pattern[Crystallica`Private`options, 
          BlankNullSequence[]]] :> 
       Module[{Crystallica`Private`plot}, If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Entering function CrystalPlot[lattvec,options] \
with the following input values:"]]; If[Crystallica`Private`debug, 
           Print["CrystalPlot :: \tlattvec = ", Crystallica`Private`lattvec]]; 
         If[Crystallica`Private`debug, 
           Print["CrystalPlot :: \toptions = ", 
            Flatten[{Crystallica`Private`options}]]]; 
         If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Calling new instance of function CrystalPlot with \
different input."]]; 
         Crystallica`Private`plot = 
          Crystallica`CrystalPlot[Crystallica`Private`lattvec, {
             If[
              MatchQ[Crystallica`Private`lattvec, 
               Alternatives[{{
                  Blank[], 
                  Blank[]}, {
                  Blank[], 
                  Blank[]}}, {{
                  Blank[], 
                  Blank[]}, {{
                   Blank[], 
                   Blank[]}, {
                   Blank[], 
                   Blank[]}}}, {{
                  Blank[], 
                  Blank[]}, {
                  Blank[]}}]], {0, 0}, {0, 0, 0}]}, {1}, 
            Crystallica`BondStyle -> False, Crystallica`AtomRad -> 0, 
            Crystallica`Private`options]; If[Crystallica`Private`debug, 
           Print[
           "CrystalPlot :: Exiting function CrystalPlot and returning to \
calling function or to user."]]; Crystallica`Private`plot]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Crystallica`Acell -> 0, Crystallica`AddQ -> False, 
      Crystallica`CenterAtOriginQ -> False, 
      Crystallica`MoveOrigin -> {0, 0, 0}, Crystallica`NewbasisQ -> True, 
      Crystallica`RetractQ -> False, Crystallica`SortQ -> False, 
      Crystallica`Sysdim -> {1, 1, 1}, 
      Crystallica`Reshape -> {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, 
      Crystallica`AtomCol -> 97, Crystallica`AtomFunction -> (Ball[#, #2]& ), 
      Crystallica`AtomRad -> 0.5, Crystallica`BondCol -> GrayLevel[0.5], 
      Crystallica`BondDist -> 2.1, Crystallica`BondRad -> 0.15, 
      Crystallica`BondRadScaledQ -> False, Crystallica`BondStyle -> 1, 
      Crystallica`BondsExtendQ -> False, Crystallica`BondsFlatQ -> False, 
      Crystallica`ButtonQ -> False, Crystallica`CellLineCol -> GrayLevel[0], 
      Crystallica`CellLineRad -> 0.02, Crystallica`CellLineStyle -> 1, 
      Crystallica`CellLinesAdd -> {}, Crystallica`CellLinesFlatQ -> False, 
      Crystallica`ForceBonds -> {}, Crystallica`ForceNoBonds -> {}, 
      Crystallica`LatticePlanes -> {}, Crystallica`Pseudo3DQ -> False}, 
    "Attributes" -> {}, "FullName" -> "Crystallica`CrystalPlot"], 
   True]]], "Output",
 CellChangeTimes->{3.8413727259061346`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"bbe1c835-e941-4cda-9d88-0ad901dd4540"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"atoms", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "+", "0.5"}], ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "]"}], ",", "0"}], 
       "]"}]}], ",", 
     RowBox[{"imax", "=", "4"}]}], "}"}], ",", 
   RowBox[{"CrystalPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"2", "i"}], ",", "0"}], "}"}], "+", "#"}], "&"}], "/@",
             "atoms"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "+", "0.5"}], ",", 
                RowBox[{
                 RowBox[{"2", "i"}], "+", "0.5"}], ",", "1"}], "}"}], "+", 
              "#"}], "&"}], "/@", "atoms"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"2", "i"}], ",", "2"}], "}"}], "+", "#"}], "&"}], "/@",
             "atoms"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], "]"}], ",", "1"}], 
      "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"3", "imax", " ", 
        RowBox[{"Length", "[", "atoms", "]"}]}]}], "]"}], ",", 
     RowBox[{"BondRad", "->", "0"}], ",", 
     RowBox[{"AtomRad", "->", "0.4"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.841372909098863*^9, 3.8413731080531654`*^9}, {
   3.841373343098872*^9, 3.8413734864084973`*^9}, {3.841373531280078*^9, 
   3.841373571235669*^9}, {3.8413736466823835`*^9, 3.841373779665474*^9}, {
   3.841373836650236*^9, 3.8413739711482887`*^9}, {3.8413740753769474`*^9, 
   3.8413742654576807`*^9}, 3.841374323415062*^9, {3.841374366656028*^9, 
   3.841374403234928*^9}, {3.8413744541779537`*^9, 3.8413745033819385`*^9}, {
   3.841375305639673*^9, 3.841375725329751*^9}, {3.8413758172490544`*^9, 
   3.8413758412780504`*^9}, {3.841375881659155*^9, 3.8413759724021764`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"65eeff01-5aec-4ab2-9e58-f8fb3a80df0b"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 0}, {1.5, 2., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 0}, {1.5, 2., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 0}, {2., 2., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 0}, {2., 2., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 0.}, {1.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 0.}, {1.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {1.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 0}, {1., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 0}, {1., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 0.}, {1.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 0.}, {1.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {1.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 0.}, {1.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 0}, {1., 2., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 2}, {1., 2., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 0}, {2.5, 2., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 0}, {2.5, 2., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 0}, {3., 2., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 0}, {3., 2., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {1.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {2.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 0}, {2., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {2., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {1.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {2.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 0.}, {2.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 0}, {2., 2., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 2}, {2., 2., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 0}, {3.5, 2., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 0}, {3.5, 2., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {2.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {2.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {3.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 0}, {3., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {3., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {2.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {2.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {3.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {2.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 0.}, {3.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 0}, {3., 2., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 2}, {3., 2., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {3.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {3.75, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.75, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {4.25, 2.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.25, 2.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 0}, {4., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 0}, {4., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {3.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {3.75, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.75, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {4.25, 2.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.25, 2.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {3.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {4., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 0.}, {4.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 0}, {4., 2., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 2}, {4., 2., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2.5, 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {2.5, 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {1.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {2., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 0.}, {1.5, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.5, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3.5, 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {3.5, 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {1.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {3., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 0.}, {2.5, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.5, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {4., 3., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4., 3., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {2.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {4., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {2.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {4.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {4., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 0.}, {3.5, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.5, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {3.75, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.75, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.25, 3.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.25, 3.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4., 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {4., 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.5, 2.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.5, 2.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {3.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 0.}, {4.5, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.5, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 0}, {1.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {1.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 0}, {2., 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {2., 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {1.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 0}, {1., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 0}, {1., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {1.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 0.}, {1.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 0}, {1., 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 2}, {1., 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {2.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {2.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {3., 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 0}, {3., 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {1.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {2.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {2., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {2., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {1.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {1.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {2.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 0.}, {2.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 0}, {2., 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {2., 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {3.5, 4., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 0}, {3.5, 4., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {3.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {3., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {3., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {3.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {2.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 0.}, {3.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 0}, {3., 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {3., 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.75, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.75, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.25, 4.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.25, 4.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 0}, {4., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 0}, {4., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.75, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.75, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.25, 3.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.25, 3.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4., 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4., 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.5, 3.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.5, 3.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {3.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 0.}, {4.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 0}, {4., 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 2}, {4., 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2.5, 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {2.5, 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {1.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {2., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 0.}, {1.5, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.5, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3.5, 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {3.5, 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {1.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {3., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 0.}, {2.5, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.5, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {4., 5., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4., 5., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {2.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {4., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {2.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {4.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {4., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 0.}, {3.5, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.5, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {3.75, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.75, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.25, 5.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.25, 5.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.25, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.75, 4.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 4.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4., 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4., 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.5, 4.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 4.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {3.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 0.}, {4.5, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.5, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 0}, {1.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {1.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 0}, {2., 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {2., 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {1.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 0}, {1., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 0}, {1., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {1.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 0.}, {1.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 0}, {1., 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 2}, {1., 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {2.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {2.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {3., 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 0}, {3., 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {1.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {2.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {2., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 0}, {2., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {1.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {1.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {2.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 0.}, {2.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 0}, {2., 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {2., 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {3.5, 6., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 0}, {3.5, 6., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {3.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {3., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 0}, {3., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {3.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {2.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 0.}, {3.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 0}, {3., 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {3., 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.75, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.75, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.25, 6.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.25, 6.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 0}, {4., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 0}, {4., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.75, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.25, 5.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 5.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4., 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.5, 5.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.5, 5.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {3.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 0.}, {4.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 0}, {4., 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 2}, {4., 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2.5, 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {2.5, 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {1.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {2., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 0.}, {1.5, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.5, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3.5, 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {3.5, 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {1.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {3., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 0.}, {2.5, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.5, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {4., 7., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4., 7., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {2.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {4., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {2.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {4.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {4., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 0.}, {3.5, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.5, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {3.75, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.75, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.25, 7.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.25, 7.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.25, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.75, 6.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 6.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4., 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4., 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.5, 6.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 6.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {3.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 0.}, {4.5, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.5, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 0}, {1.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 0}, {1.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 0}, {2., 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 0}, {2., 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {1.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {1.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 0.}, {1.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {1.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 0}, {1., 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 2}, {1., 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 0}, {2.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 0}, {2.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 0}, {3., 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 0}, {3., 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {1.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {2.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {1.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {1.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {2.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 0.}, {2.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 0}, {2., 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 2}, {2., 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 0}, {3.5, 8., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 0}, {3.5, 8., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {2.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {3.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {3.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {2.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 0.}, {3.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 0}, {3., 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 2}, {3., 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {3.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.75, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.75, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.25, 8.5, 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.25, 8.5, 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.75, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.25, 7.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 7.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4., 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.5, 7.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.5, 7.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {3.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 0.}, {4.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 0}, {4., 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 2}, {4., 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {2., 9., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2., 9., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {2.5, 9., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {2.5, 9., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {2., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {1.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {2.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 0.}, {1.5, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.5, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {3., 9., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3., 9., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {3.5, 9., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {3.5, 9., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {3., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {3.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 0.}, {2.5, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.5, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {4., 9., 0.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4., 9., 0.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {4., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {2.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {4.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 0.}, {3.5, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.5, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.25, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.75, 8.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 8.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4., 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4., 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.5, 8.75, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.5, 8.75, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {3.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.25, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4.25, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.75, 9.25, 0.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.75, 9.25, 0.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 0.}, {4.5, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.5, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2., 2.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2., 2.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2.5, 2.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {2.5, 2.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 2.}, {1.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {1.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {2.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {2., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 2.5, 1.}, {1.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {1.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3., 2.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3., 2.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3.5, 2.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {3.5, 2.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {1.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 2.}, {1.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {2.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {3.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {3., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 2.5, 1.}, {2.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {4., 2.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4., 2.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {2.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {4.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {2.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {3.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {4., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 2.5, 1.}, {3.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {3.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.25, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.75, 3., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 3., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {3.75, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3.75, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.25, 2.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {4.25, 2.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {4., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 2.5, 1.}, {4.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {3., 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3., 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {2.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 2.}, {1.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {2.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {2.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {1.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 3.5, 1.}, {2.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {4., 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4., 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {3.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {3.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {3.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {2.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 3.5, 1.}, {3.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.5, 3.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.5, 3.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4., 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {4., 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {3.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 3.5, 1.}, {4.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.25, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4.25, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 4., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.75, 4., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {5., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {5., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.5, 2.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {4.5, 2.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.25, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {4.25, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 3.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.75, 3.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 3.5, 1.}, {4.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2.5, 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {2.5, 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {1.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {2., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 4.5, 1.}, {1.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {1.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3.5, 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {3.5, 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {1.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {3., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 4.5, 1.}, {2.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4., 4.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4., 4.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {2.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {2.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {4., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 4.5, 1.}, {3.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {3.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.75, 5., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 5., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4., 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {4., 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 3.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.5, 3.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {3.75, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.75, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 4.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.25, 4.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {4., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 4.5, 1.}, {4.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {3., 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3., 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {2.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {2.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {1.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 5.5, 1.}, {2.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {4., 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4., 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {3.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {3.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {2.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 5.5, 1.}, {3.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.5, 5.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.5, 5.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4., 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {3.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 5.5, 1.}, {4.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.25, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4.25, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 6., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.75, 6., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {5., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {5., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.5, 4.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.5, 4.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.25, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {4.25, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 5.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.75, 5.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 5.5, 1.}, {4.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2.5, 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {2.5, 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {1.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {2., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 6.5, 1.}, {1.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {1.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3.5, 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {3.5, 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {1.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {3., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 6.5, 1.}, {2.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4., 6.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4., 6.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {2.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {2.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {4., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 6.5, 1.}, {3.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {3.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.75, 7., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 7., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4., 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {4., 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 5.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.5, 5.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {3.75, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.75, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 6.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.25, 6.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {4., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 6.5, 1.}, {4.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {3., 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3., 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {2.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {2.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {1.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 7.5, 1.}, {2.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {4., 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4., 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {3.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {3.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {2.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 7.5, 1.}, {3.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.5, 7.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.5, 7.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4., 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {3.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 7.5, 1.}, {4.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.25, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4.25, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 8., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.75, 8., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {5., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {5., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.5, 6.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.5, 6.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.25, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {4.25, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 7.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.75, 7.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 7.5, 1.}, {4.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2.5, 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {2.5, 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {1.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {1.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {1.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 8.5, 1.}, {2., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3.5, 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {3.5, 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {1.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {2., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {2.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 8.5, 1.}, {3., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4., 8.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4., 8.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {2.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {2.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {3., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {3.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 8.5, 1.}, {4., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {3.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.25, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4.25, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.75, 9., 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.75, 9., 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4., 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {4., 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.5, 7.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.5, 7.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {3.75, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.75, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.25, 8.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.25, 8.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {4., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 8.5, 1.}, {4.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.5, 9.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.5, 9.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {3., 9.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3., 9.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {1.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {1.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 9.5, 1.}, {2.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {2.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.5, 9.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.5, 9.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {4., 9.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4., 9.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {2.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {2.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 9.5, 1.}, {3.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {3.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4.5, 9.5, 1.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.5, 9.5, 1.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4., 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4., 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {3.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {3.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 9.5, 1.}, {4.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.5, 8.75, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.5, 8.75, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.25, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {4.25, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{5., 9.5, 1.}, {4.75, 9.25, 1.5}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.75, 9.25, 1.5}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 2}, {1.5, 2., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 2}, {1.5, 2., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 2}, {2., 2., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 2}, {2., 2., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 2.}, {1.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 2., 2.}, {1.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {1.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 2, 2}, {1., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 2}, {1., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 2}, {2.5, 2., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 2}, {2.5, 2., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 2}, {3., 2., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 2}, {3., 2., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {1.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 2., 2.}, {2.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {2.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 2, 2}, {2., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {2., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 2}, {3.5, 2., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 2}, {3.5, 2., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {2.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {2.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 2., 2.}, {3.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {3.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 2, 2}, {3., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {3., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {3.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {3.75, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.75, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 2., 2.}, {4.25, 2.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.25, 2.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 2, 2}, {4., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 2}, {4., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2.5, 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {2.5, 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {1.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {2.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 3., 2.}, {1.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3.5, 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {3.5, 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {1.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {3.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 3., 2.}, {2.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {4., 3., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4., 3., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {2.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 3., 2.}, {3.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {3.75, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.75, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.25, 3.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.25, 3.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 3., 2.}, {4.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 2}, {1.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {1.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 2}, {2., 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {2., 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 4., 2.}, {1.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {1.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 4, 2}, {1., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 2}, {1., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {2.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {2.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {3., 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 2}, {3., 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {1.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 4., 2.}, {2.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {2.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 4, 2}, {2., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {2., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {3.5, 4., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 2}, {3.5, 4., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {2.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 4., 2.}, {3.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {3.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 4, 2}, {3., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {3., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {3.75, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.75, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 4., 2.}, {4.25, 4.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.25, 4.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 4, 2}, {4., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 2}, {4., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2.5, 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {2.5, 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {1.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {2.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 5., 2.}, {1.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3.5, 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {3.5, 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {1.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {3.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 5., 2.}, {2.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {4., 5., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4., 5., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {2.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 5., 2.}, {3.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {3.75, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.75, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.25, 5.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.25, 5.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 5., 2.}, {4.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 2}, {1.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {1.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 2}, {2., 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {2., 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 6., 2.}, {1.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {1.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 6, 2}, {1., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 2}, {1., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {2.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {2.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {3., 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 2}, {3., 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {1.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 6., 2.}, {2.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {2.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 6, 2}, {2., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 2}, {2., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {3.5, 6., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 2}, {3.5, 6., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {2.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 6., 2.}, {3.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {3.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 6, 2}, {3., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 2}, {3., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {3.75, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.75, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 6., 2.}, {4.25, 6.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.25, 6.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 6, 2}, {4., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 2}, {4., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2.5, 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {2.5, 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {1.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {2.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 7., 2.}, {1.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3.5, 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {3.5, 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {1.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {3.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 7., 2.}, {2.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {4., 7., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4., 7., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {2.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 7., 2.}, {3.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {3.75, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.75, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.25, 7.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.25, 7.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 7., 2.}, {4.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 2}, {1.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 2}, {1.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1, 8, 2}, {2., 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 2}, {2., 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1., 8., 2.}, {1.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {1.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 2}, {2.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 2}, {2.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2, 8, 2}, {3., 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 2}, {3., 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {1.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {1.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2., 8., 2.}, {2.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {2.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3, 8, 2}, {3.5, 8., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4, 8, 2}, {3.5, 8., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {2.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {2.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3., 8., 2.}, {3.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {3.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {3.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {3.75, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3.75, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4., 8., 2.}, {4.25, 8.5, 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4.25, 8.5, 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {2., 9., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {2., 9., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{1.5, 9., 2.}, {2.5, 9., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {2.5, 9., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {3., 9., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {3., 9., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{2.5, 9., 2.}, {3.5, 9., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {3.5, 9., 2.}}, 0]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{3.5, 9., 2.}, {4., 9., 2.}}, 0]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     TubeBox[{{4.5, 9., 2.}, {4., 9., 2.}}, 0]}}, 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 2, 0}, 0.4],
       "Ball"]},
     "1"],
    Annotation[#, 1, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 2, 0}, 0.4],
       "Ball"]},
     "2"],
    Annotation[#, 2, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 2, 0}, 0.4],
       "Ball"]},
     "3"],
    Annotation[#, 3, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 2, 0}, 0.4],
       "Ball"]},
     "4"],
    Annotation[#, 4, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 3., 0.}, 0.4],
       "Ball"]},
     "5"],
    Annotation[#, 5, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 3., 0.}, 0.4],
       "Ball"]},
     "6"],
    Annotation[#, 6, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 3., 0.}, 0.4],
       "Ball"]},
     "7"],
    Annotation[#, 7, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 3., 0.}, 0.4],
       "Ball"]},
     "8"],
    Annotation[#, 8, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 4, 0}, 0.4],
       "Ball"]},
     "9"],
    Annotation[#, 9, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 4, 0}, 0.4],
       "Ball"]},
     "10"],
    Annotation[#, 10, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 4, 0}, 0.4],
       "Ball"]},
     "11"],
    Annotation[#, 11, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 4, 0}, 0.4],
       "Ball"]},
     "12"],
    Annotation[#, 12, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 5., 0.}, 0.4],
       "Ball"]},
     "13"],
    Annotation[#, 13, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 5., 0.}, 0.4],
       "Ball"]},
     "14"],
    Annotation[#, 14, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 5., 0.}, 0.4],
       "Ball"]},
     "15"],
    Annotation[#, 15, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 5., 0.}, 0.4],
       "Ball"]},
     "16"],
    Annotation[#, 16, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 6, 0}, 0.4],
       "Ball"]},
     "17"],
    Annotation[#, 17, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 6, 0}, 0.4],
       "Ball"]},
     "18"],
    Annotation[#, 18, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 6, 0}, 0.4],
       "Ball"]},
     "19"],
    Annotation[#, 19, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 6, 0}, 0.4],
       "Ball"]},
     "20"],
    Annotation[#, 20, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 7., 0.}, 0.4],
       "Ball"]},
     "21"],
    Annotation[#, 21, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 7., 0.}, 0.4],
       "Ball"]},
     "22"],
    Annotation[#, 22, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 7., 0.}, 0.4],
       "Ball"]},
     "23"],
    Annotation[#, 23, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 7., 0.}, 0.4],
       "Ball"]},
     "24"],
    Annotation[#, 24, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 8, 0}, 0.4],
       "Ball"]},
     "25"],
    Annotation[#, 25, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 8, 0}, 0.4],
       "Ball"]},
     "26"],
    Annotation[#, 26, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 8, 0}, 0.4],
       "Ball"]},
     "27"],
    Annotation[#, 27, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 8, 0}, 0.4],
       "Ball"]},
     "28"],
    Annotation[#, 28, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 9., 0.}, 0.4],
       "Ball"]},
     "29"],
    Annotation[#, 29, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 9., 0.}, 0.4],
       "Ball"]},
     "30"],
    Annotation[#, 30, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 9., 0.}, 0.4],
       "Ball"]},
     "31"],
    Annotation[#, 31, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 9., 0.}, 0.4],
       "Ball"]},
     "32"],
    Annotation[#, 32, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 2.5, 1.}, 0.4],
       "Ball"]},
     "33"],
    Annotation[#, 33, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 2.5, 1.}, 0.4],
       "Ball"]},
     "34"],
    Annotation[#, 34, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 2.5, 1.}, 0.4],
       "Ball"]},
     "35"],
    Annotation[#, 35, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 2.5, 1.}, 0.4],
       "Ball"]},
     "36"],
    Annotation[#, 36, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2., 3.5, 1.}, 0.4],
       "Ball"]},
     "37"],
    Annotation[#, 37, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3., 3.5, 1.}, 0.4],
       "Ball"]},
     "38"],
    Annotation[#, 38, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4., 3.5, 1.}, 0.4],
       "Ball"]},
     "39"],
    Annotation[#, 39, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{5., 3.5, 1.}, 0.4],
       "Ball"]},
     "40"],
    Annotation[#, 40, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 4.5, 1.}, 0.4],
       "Ball"]},
     "41"],
    Annotation[#, 41, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 4.5, 1.}, 0.4],
       "Ball"]},
     "42"],
    Annotation[#, 42, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 4.5, 1.}, 0.4],
       "Ball"]},
     "43"],
    Annotation[#, 43, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 4.5, 1.}, 0.4],
       "Ball"]},
     "44"],
    Annotation[#, 44, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2., 5.5, 1.}, 0.4],
       "Ball"]},
     "45"],
    Annotation[#, 45, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3., 5.5, 1.}, 0.4],
       "Ball"]},
     "46"],
    Annotation[#, 46, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4., 5.5, 1.}, 0.4],
       "Ball"]},
     "47"],
    Annotation[#, 47, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{5., 5.5, 1.}, 0.4],
       "Ball"]},
     "48"],
    Annotation[#, 48, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 6.5, 1.}, 0.4],
       "Ball"]},
     "49"],
    Annotation[#, 49, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 6.5, 1.}, 0.4],
       "Ball"]},
     "50"],
    Annotation[#, 50, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 6.5, 1.}, 0.4],
       "Ball"]},
     "51"],
    Annotation[#, 51, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 6.5, 1.}, 0.4],
       "Ball"]},
     "52"],
    Annotation[#, 52, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2., 7.5, 1.}, 0.4],
       "Ball"]},
     "53"],
    Annotation[#, 53, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3., 7.5, 1.}, 0.4],
       "Ball"]},
     "54"],
    Annotation[#, 54, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4., 7.5, 1.}, 0.4],
       "Ball"]},
     "55"],
    Annotation[#, 55, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{5., 7.5, 1.}, 0.4],
       "Ball"]},
     "56"],
    Annotation[#, 56, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 8.5, 1.}, 0.4],
       "Ball"]},
     "57"],
    Annotation[#, 57, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 8.5, 1.}, 0.4],
       "Ball"]},
     "58"],
    Annotation[#, 58, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 8.5, 1.}, 0.4],
       "Ball"]},
     "59"],
    Annotation[#, 59, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 8.5, 1.}, 0.4],
       "Ball"]},
     "60"],
    Annotation[#, 60, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2., 9.5, 1.}, 0.4],
       "Ball"]},
     "61"],
    Annotation[#, 61, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3., 9.5, 1.}, 0.4],
       "Ball"]},
     "62"],
    Annotation[#, 62, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4., 9.5, 1.}, 0.4],
       "Ball"]},
     "63"],
    Annotation[#, 63, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{5., 9.5, 1.}, 0.4],
       "Ball"]},
     "64"],
    Annotation[#, 64, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 2, 2}, 0.4],
       "Ball"]},
     "65"],
    Annotation[#, 65, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 2, 2}, 0.4],
       "Ball"]},
     "66"],
    Annotation[#, 66, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 2, 2}, 0.4],
       "Ball"]},
     "67"],
    Annotation[#, 67, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 2, 2}, 0.4],
       "Ball"]},
     "68"],
    Annotation[#, 68, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 3., 2.}, 0.4],
       "Ball"]},
     "69"],
    Annotation[#, 69, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 3., 2.}, 0.4],
       "Ball"]},
     "70"],
    Annotation[#, 70, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 3., 2.}, 0.4],
       "Ball"]},
     "71"],
    Annotation[#, 71, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 3., 2.}, 0.4],
       "Ball"]},
     "72"],
    Annotation[#, 72, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 4, 2}, 0.4],
       "Ball"]},
     "73"],
    Annotation[#, 73, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 4, 2}, 0.4],
       "Ball"]},
     "74"],
    Annotation[#, 74, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 4, 2}, 0.4],
       "Ball"]},
     "75"],
    Annotation[#, 75, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 4, 2}, 0.4],
       "Ball"]},
     "76"],
    Annotation[#, 76, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 5., 2.}, 0.4],
       "Ball"]},
     "77"],
    Annotation[#, 77, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 5., 2.}, 0.4],
       "Ball"]},
     "78"],
    Annotation[#, 78, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 5., 2.}, 0.4],
       "Ball"]},
     "79"],
    Annotation[#, 79, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 5., 2.}, 0.4],
       "Ball"]},
     "80"],
    Annotation[#, 80, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 6, 2}, 0.4],
       "Ball"]},
     "81"],
    Annotation[#, 81, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 6, 2}, 0.4],
       "Ball"]},
     "82"],
    Annotation[#, 82, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 6, 2}, 0.4],
       "Ball"]},
     "83"],
    Annotation[#, 83, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 6, 2}, 0.4],
       "Ball"]},
     "84"],
    Annotation[#, 84, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 7., 2.}, 0.4],
       "Ball"]},
     "85"],
    Annotation[#, 85, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 7., 2.}, 0.4],
       "Ball"]},
     "86"],
    Annotation[#, 86, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 7., 2.}, 0.4],
       "Ball"]},
     "87"],
    Annotation[#, 87, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 7., 2.}, 0.4],
       "Ball"]},
     "88"],
    Annotation[#, 88, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1, 8, 2}, 0.4],
       "Ball"]},
     "89"],
    Annotation[#, 89, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2, 8, 2}, 0.4],
       "Ball"]},
     "90"],
    Annotation[#, 90, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 8, 2}, 0.4],
       "Ball"]},
     "91"],
    Annotation[#, 91, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4, 8, 2}, 0.4],
       "Ball"]},
     "92"],
    Annotation[#, 92, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 9., 2.}, 0.4],
       "Ball"]},
     "93"],
    Annotation[#, 93, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{2.5, 9., 2.}, 0.4],
       "Ball"]},
     "94"],
    Annotation[#, 94, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3.5, 9., 2.}, 0.4],
       "Ball"]},
     "95"],
    Annotation[#, 95, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{4.5, 9., 2.}, 0.4],
       "Ball"]},
     "96"],
    Annotation[#, 96, "Tooltip"]& ]},
  BaseStyle->{
    Specularity[
     GrayLevel[0.5], 100]},
  Boxed->False,
  ImageSize->{360., 360.},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  SphericalRegion->True,
  ViewPoint->{-3.3790259919468046`, 
   0.12911019076074368`, -0.12455482483483409`},
  ViewVertical->{-0.8350900834317704, 
   0.11046028115897176`, -0.5389091563892746}]], "Output",
 CellChangeTimes->{{3.841375657449559*^9, 3.841375687396531*^9}, 
   3.8413757312867537`*^9, {3.8413758195135345`*^9, 3.841375841720791*^9}, {
   3.841375895887189*^9, 3.8413759080533223`*^9}, {3.8413759453696938`*^9, 
   3.841375973565959*^9}},
 CellLabel->"Out[103]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4lNXWPjzvBOwodkDUKKjYK4rtGFREURBR7GIQBKT3HiZ0CL13gvTe
O8jQLNgVy7HGig2kSG/7W/dauz4z4Zzf39/humZIJpPM86y2V71X1dqtG7za
pHbr1+rUzqzcsnbzBq/VaZX5ULOW9FLG/8Vi8Y/xyIwVoa9VLJb+6dNY7H8v
/O+F/73wvxf+98L/Xvj/3Qs98RTPzCh6cuykrFNOP4sexbNOPeNsfpx82pmZ
RU461f1SJfmlXH4+PbNI0VPwO4niF2YmS5W9pSDzun+pK8s/oq66/VFV7o6q
6uoKj6ur76yurrnriVhcXXv3k7Gi6rp7niq4snyVJL03cf7F5bJOK3aud1VZ
8gE5/Hw2ffgp2WecXSL/vNLl1OU3VlRlb66krrj1YXVV+Sr2A+iP05+ugT+s
rru3prr+X8+oG+57lh7PqRuynqcPvpGei6obK76ArwqurlAtefmN92cXv+BS
74PvlQ/uxM/n4IMT9IaCi6+6gz+4zM0Phh98p/ngJ+mDvQ/Neo4+6Hl1U8UX
1U33vxRXNz9QK0Pd/ODLdAG3PJiNr/BSAf1u4sLM670LuFsuoAM/n6cvIFNd
dv196rIbslSZmx5QZW95SF15G8j7GN15NXUNkdbc+fX/etq7gBfow1/EB/EH
0gfH1S2Vascy1K0PvaJuq1yHHnWJMHguyt/figf9jN6VKJF5g3ddd8p1tefn
cyEeTBRcExPmJhCmMrE9ypEnPW6kuSa6nDg+MnYmLkPd9vCrqvwj9dXtVRqo
2x99zf5/B77m7+vzz297uG7B9fc+DeK5a7xDrrEtP18c0u56XOf9moHpr5P+
nro+oN1LfI23PlSbHnXwmaq8uT5c02MNVYWqjVWFak3UndWaqjsfb0b3chc9
n6zuqt4M3/Pr+DneW/6Reknim0fU2+WC2/DzpbhgIapm9uU3VIxccDWtRzXU
tYbZWc/LxULSHngJBGVCChGFkOZCcUF3VW+u7n6iBT1aqntqtFL3PNla3ftk
m1gRde9TbWIn8fd312jJ76PfKSApzjqj+IXumm+Ta27Nz6VxzZrAQmQR0pDI
UUEg9WPi3kRCAG2Q663HRDUEJTKqu6u34Gvha3yqrfpXzXZx9a+n25MA3/d0
B3XfMx1V1rOd6Ds8n8zf3/dMB3pbe347bpHon31uqbIezW+V628lQuIJiH7c
EBXmanz9VrlIOESAIbzZLBigNdPYXDfR111ze74oukSV9VxnVfH5LkTr+19I
xM6g51z1wItd9SOXv6ef4D2q4nM5fEN0z7iR7PMuutLdwy1yDy35OROmMXIP
IQ9gJMRA1GTjAHmBAkJW5PrrkYI1JGI1Yb5DLvjan27P11CRrvv+5xN8jQ+8
2E09+FJ39WCtHqrSyz1VpexeJ6mHsnvF8R0xAa/j57in++k+cN8kX9nnlb7K
Y8LNcgMtnOCHN0CC5Au+uQHHgJeE+GSuoJEQcgiOvfiabYXoQnC+GFwULvih
7N6qcu0+qvIrfdXDdfqRxj5St3+GeuTVAbFi9OUAfKserttPHnXy+I34BbpJ
/gMPvNSN/yiJIInWFd5d3SR31Zyfr0h/VzeZA+RRtj1sd6ASmiVsmPUd3fFY
IxEnzQ5hRQ6LCC7C3o3cCV98lVcHqkfrD1aPNhiiHmswVD32Gh7DVNXXhquq
DYfT3dJ3JHr4Gd6D91apN4h/j28cN0w3yzdKVLvv2U5Zxc4p5e7xRrnHZvx8
Oe4xWfLyG63qmDMKnMPxn3KPsKeVtcg9JiIHNb/nyTYsbuAY1OBBc390Lbgm
Yg9f56P15b7oXlS1RiNVtcaj1OONR8fV403GZKjqTcfSOVK9yRh8i9f5PVUb
juD7x+9VqTeY/xbohb/9YK3uuN/Mk049w93jDf49lvXO34pyhvj3Rw7Atfc8
yecGTLAxZyyRxD+YXEgk1Jj5B2kM7q0fXw/44N/X401G427UE83GqSeaj1c1
mk9QNVpMVE+2zI/T06QMfEV8xGtP0M/wPrxf7nkE8xx/E3+78it59Hk9kqB/
9B6biqziPHfHDt+jaF9UTvkeSfNwFgZaR+Yu4B+ZAcjmw6/kufuja8K1PU48
q950DF8z7ovuRD3Z6nX1VKvJ6qnWU1TNNlPpMY1ckqfbTiOl5O/pdfycbl3u
mX4XPAat8HchG6BlpVo9si+45FpPKa/3b7SsFlYRUmNi5CarBYLKjMRN4kyC
kJJNJzvGBw+UEMoBJkL5oDi4AGHgCGYCMw+Ma4Gbm0Q3NplvhG5JPdNuhnqm
/Uz1bIdZcXqaTXf6bMfZ6rmOc/iBr+lHpKv0ptjp6ul20/lXnyIa4c/JvY9m
WYEOw1CRGc486ZTTvfu+Tu67iTBYnxFZnvvsn29iWo2CsgDTfd9p7vupNlZ4
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
btMssmQmI/SgazTQn00tVNL7nF2Cf/YiOT2Q4+ioEiIiHuNgGg9l2mJVLflo
FZmMF2edXvwCtn1ckCB7x15tbX9UOl0/0hJvEUYyWIQhqqLXn/n1LzoDUOci
C0D2ubXAvBXQocGK4TWINdVxPA5SVDJSq0r6wPAakLBxBf+nVpTe4cOCN2tw
XXBpPvcriJZEs24Cg3pZuL063R50ExEwHGfDAMDPYUxGtENvlWXNaOBtIm40
KoRDxUh6s3HcqzYe26uBJ2nhUEeHcKjYXl3Pbq/OKn6+bCB+KdAUdhEYsELv
+jAtg6b7lpFSA03xhl8ixXvBlH7XYnpAU7rM/EX1XPCXGrR6jxqz+aDKf++o
mrBFMQjNoLXH1JB1goRgohVELiPf9LTl4+Pkeh1TA9cdUb2XH+Jd5k5TdruR
hxnpNYV9bhK/2prTDMeEciqSdqMcHBMyWDhAoBnh4NNiFm2TO5BNmMNwducT
68XfKuoWORe/MLuYTBTE4mggo4CXvkahHdUH7a39KwkbK+vhW7Jk+A6uASEw
LefSNetPO69NMyv1vofY9ZkddW2ua1oMtgotgyKxMuk6F+MCfiYVA40RjBMk
fbn2NxvS4Jw2qF/Bum/tkfGOt75JlxPttjxx9Z3VpV3kqsj+nyy70dLmAKKr
mu1IXba3SKCRbFnhmN/BDAo6Zpp1zf5a+CaFALgKeCs9n+4Bt04URTPArTzW
Kb0B5FagIUDOoBdFswR/rrodj3KYvHpIO3r+BGmmNJMFOkjl8adxX4hWzRBA
0wEr9vDZM/nD4zxwA2jIgWuOsmYNJs0avO6YaNcG0TAEMdCssVuOkaYdUQPJ
q+u57JDqujCiVZHmaNYqnfNprisbppMpfQHqI8+uLud74lErvXCilkmF07lr
EEK5iZdE/+E6/WGsJC1dzG25Ln1VwSVX3yl52OhuWW8i4Zq7apB9RA69CLZc
y0RC6XKYbLiC/+S9DLEPp0XSry5ZE6IkTwhSBylrdHxsMQ2Z10jX2aFAUdg8
s0LHzdjoIUVSFLwvh1Ffdll3zzrIQePf17YBCbbL1pTypaaEz5c5GAnXcH3k
GCfKVagWE80r5/l9WXbFZ/owyD/SDGRyAweZDBANfU6cEDK50QgB6TIAn83N
gnSDSTvFYNKigJ+Bw4VONlmNbuBop3pwtBMcHK3suM6/5s4n0uhfPoQFWXDx
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
Ldg14cJGGfd0VztWhs39sdVl43vipDNXXUKN1laW/2H9FaUUVvjI0KBgLrGx
ew4sX3FZ9820skRkL5Y3cKzEEBELHJiZ90VgweJdZlhuPwevI4C934Kdpg+k
2ADM6QKYT3HIgw1f9+MnqTQ/cdtsum8BmIqX0xUvwfLArRT5cIbx6crgCINn
QkmPbezSlsTRskIXFc6p2lMjCRE6SdjJBmrPI8V+EiDHytIIzxpsN9JqypbK
a8W/S7oNhQQBVEphHYrjSqiQp5cVz2DBxxPT8TEtc11llBcEMso4ufhXZJT3
/KqMMoMo41IqXERK2SdNSgkYyNOdi+efYOU5zMDCl7ZPeR72RTdusguMCxnZ
V4g1Z0w/f9vaX7uCppmlnrO6fDXfcN47+jOX+QjMtfE1TmhMH8vdwugPK+jy
1Ax79HMapVp8OoC0c89Gd3vT3VDa42aecZEp1pLDFSDFRs3aSoYOQqKUnOXA
UQJlRGj+IKtDczqFW1mEZitzMB/zJvatdCUPl21ANJpMAc753llITF+z9CNm
BNLqAjE5fJ1uuBx+DB6/RhkyVOt2nYshXJ5wPUc3RQX9yCUNzr6sQa2DDjuG
P00NKddtv/3bKyVBE5ILuY+LuKZsHNGBLd8/Djj0j/4LwkoyyqAOgg7DDOq0
oMOAGd9EU/vYn4LLnrd4hClJmRgAfshtN4AR6mu7YUGLPWDhDjN0Gcy695mB
i3ab0vk7TW8Cxx4zNyPS3XSa+lNiD/ptItf9M7dyppIvC89PRceXFB0POvRo
rSS7xmo5rHJbJVe52ne7lPp/xqtcrSQL/PyDNa4QxwUdNfKE0BFUxoamQwCK
SSsTP2ekrzXy3URgzTeBz6TMLvGx8vfr3abeNtw4op45pSE3PNf8J8aAsnxv
6NV4uqIo6LvVAdbGuxfqI320XkEmsqap/A/6SJFH1gnkkclo5H6a/t6bcZY+
NdeUtese6YKvcZNj5onenRty8NkhF7JM6oB3bPuG8CbmeCkuWlYFftivqTDa
5+rZHROAMBn+jj5DtDzvBIE2/3GGgtKZf5SnqkIA8jx3vHktEZh/JrMyQim5
dSku1Opk47DH4EcXZuOzLjq6wIsoG+ofF/NaEcAIJHxk0Kum2dDXnQsHip+m
fGleK8J1oaqSSzzrxEG9M66kgOUSMSlSL1g6axX0I5yghBCM0WvWrgsPMRXT
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
0e+CJFwpj8joUZHCeu6gI2rfnWLcfpM4nK5VNCOORSdfYrCpV6i2nOh05v/C
ZM1vdyBbbj3+U1YSAU3bkGUbo7Gro2hkYVs0eCkMfH3Ue96vrH3TcepaVhl5
NC8NXpa2HefmxQ+pvjxFcxRrhpY4f/YVDc1Urb7R0xNDFl29W60Il9XZ82i+
rNZ8ig6hnaFbJuGeljNSro/LT/7t0TqjiEd+0nDA84zXazH67aj9k59EPWet
jQYu+iUatnwjOfiWaODiDWTY61kxFL2efs+IcBeK92F0fca9soMpnad+AN1q
0d7rv3S74WzfJIvXKnsbkLwaemGnW42VEVi0muzJZZVSiGMSRm63QvdLcMgk
Jy7e0oiWcSZ98MWBIEIvAoeVuPrFhaePwBOYQ7fhzhTDdtONG912t9fDC0fG
fsTuEpQ/wrc/Oky6VYh9lwO3F71JhghJQu1FxZsAdsCQbeTK7dEouknDUTkv
2Uw3dgNHrE7TvovaT0bDbg0vJOoEwwqwq3Fj6DZUQBCUooBm0Rj25QXcD049
zKKaX3ScxR/7i2wNRJEuMOyGqcttAlB1EGZHhhoSGMOwsXeAzgLQ1s1M0t1u
wqdRj1nfRIOXrCPH3sGDx6HLMTY3guxLRAMWRg1dZ3QVxry8UzSd394RjYNh
rxIhSXAvMnGHYRTwVejiguxKSQVEXBoJUomXlyTIkhKfOzDItuOJxwmB4GTI
kBoXvuKOjrCj4l6U4uIzQeo9YAaDUHvm9jQTP/vKilvUlrqiYVLh2K8rPV5t
3sV49M8GdYXEoE4Yz808hOpGK1P+9M+sEQq57hGQ7V4BiV9Id29hzYnczB9Z
CwG7tq0wqJtQ5Ere0uwYM5dNvzf5b9JzyNHRZ0y8Oqu5OBNvIDps3m6mfHyH
xu4srrtVLFccY1PDYfmo5YbT4iRVVCcQfBH4MnqJaEGjh9jq8fe5CdQdFk55
2ajCH2Th26MRz21jxfYBizdzHoLQDfK1IZBPpQgw+qUoGvvqTnrbHo1cLXKp
fZc4C1edxYCSBjv8U1UHQvaMyftKUoy7QoP3QnsNL/3YtaZ5Gug3zjUqJn2P
o2ITglH8L/w1JfKpyxvkkDjdltJGgXfFNwjk14egH5nApEdwm0/awmmyt2Bc
8bgPYB+kJKqqqBOYVuM/o5z6Sy6iWMCbohZMGlK4g6lYGrj0D1FaWLCBdbza
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
YFRgVGBUYFRgVGBUgFIBBkYAADqmNw==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"a129c322-31a8-45f0-8891-64be7ec9e0dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "2"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}], "}"}]}], "]"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{"1", ",", "9"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84137612883327*^9, 3.841376229143797*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"9785822b-e66d-4bbf-942b-040ce04570c1"],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], 
     TubeBox[{{{0, 0, 0}, {3, 0, 0}, {3, 3, 0}, {0, 3, 0}, {0, 0, 0}}, {{0, 0,
       3}, {3, 0, 3}, {3, 3, 3}, {0, 3, 3}, {0, 0, 3}}}, 0.02]}, 
    {GrayLevel[0], 
     TubeBox[{{{0, 0, 0}, {0, 0, 3}}, {{3, 0, 0}, {3, 0, 3}}, {{3, 3, 0}, {3, 
      3, 3}}, {{0, 3, 0}, {0, 3, 3}}}, 0.02]}}, {
    {GrayLevel[0], 
     TubeBox[{{0, 0, 0}, {2.4980039840795545`, 0., 0.}, {2.4980039840795545`, 
       0., 0.}, {3, 0, 0}}, {0.021, 0.021, 0.12549900398011132`, 0}]}, 
    {GrayLevel[0], 
     TubeBox[{{0, 0, 0}, {0., 2.4980039840795545`, 0.}, {0., 
       2.4980039840795545`, 0.}, {0, 3, 0}}, {
      0.021, 0.021, 0.12549900398011132`, 0}]}, 
    {GrayLevel[0], 
     TubeBox[{{0, 0, 0}, {0., 0., 2.4980039840795545`}, {0., 0., 
       2.4980039840795545`}, {0, 0, 3}}, {
      0.021, 0.021, 0.12549900398011132`, 0}]}}, 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{0, 0, 0}, 0.5],
       "Ball"]},
     "1"],
    Annotation[#, 1, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{0, 0, 3}, 0.5],
       "Ball"]},
     "2"],
    Annotation[#, 2, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{0, 3, 0}, 0.5],
       "Ball"]},
     "3"],
    Annotation[#, 3, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{0, 3, 3}, 0.5],
       "Ball"]},
     "4"],
    Annotation[#, 4, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 0, 0}, 0.5],
       "Ball"]},
     "5"],
    Annotation[#, 5, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 0, 3}, 0.5],
       "Ball"]},
     "6"],
    Annotation[#, 6, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 3, 0}, 0.5],
       "Ball"]},
     "7"],
    Annotation[#, 7, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{3, 3, 3}, 0.5],
       "Ball"]},
     "8"],
    Annotation[#, 8, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      TagBox[SphereBox[{1.5, 1.5, 1.5}, 0.5],
       "Ball"]},
     "9"],
    Annotation[#, 9, "Tooltip"]& ]},
  BaseStyle->{
    Specularity[
     GrayLevel[0.5], 100]},
  Boxed->False,
  Lighting->"Neutral",
  SphericalRegion->True]], "Output",
 CellChangeTimes->{{3.8413761788841724`*^9, 3.841376229469812*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"71ae3022-774d-4aa7-9025-e45f06b09a06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CrystalPlot", "[", 
    RowBox[{
     RowBox[{"3", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", "14"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AtomCol", "->", 
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CellLineCol", "->", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CellLineRad", "->", "0.1"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.8", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Thickness", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.84137612883327*^9, 3.841376499992857*^9}, {
  3.8413768273132277`*^9, 3.841376864004714*^9}, {3.8413774315310693`*^9, 
  3.841377536230892*^9}, {3.8413776834103503`*^9, 3.841377716128009*^9}, {
  3.841377750046096*^9, 3.841377844953601*^9}, {3.8413778775222883`*^9, 
  3.8413778926649528`*^9}, {3.841378114103203*^9, 3.8413781570508413`*^9}, {
  3.841378271436965*^9, 3.841378274272075*^9}, {3.8416359086883073`*^9, 
  3.841635936699995*^9}, {3.8416359739265137`*^9, 3.841635975885046*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"108b8506-4ac4-47e6-ad0b-857b19a8a3e9"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{{0, 0, 0}, {3, 0, 0}, {3, 3, 0}, {0, 3, 0}, {0, 0, 0}}, {{0, 
       0, 3}, {3, 0, 3}, {3, 3, 3}, {0, 3, 3}, {0, 0, 3}}}, 0.1]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{{0, 0, 0}, {0, 0, 3}}, {{3, 0, 0}, {3, 0, 3}}, {{3, 3, 0}, {3,
        3, 3}}, {{0, 3, 0}, {0, 3, 3}}}, 0.1]}}, {
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {1.899091284438169, 0., 0.}, {1.899091284438169, 0.,
         0.}, {3, 0, 0}}, {0.101, 0.101, 0.2752271788904577, 0}]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {0., 1.899091284438169, 0.}, {0., 1.899091284438169,
         0.}, {0, 3, 0}}, {0.101, 0.101, 0.2752271788904577, 0}]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {0., 0., 1.899091284438169}, {0., 0., 
        1.899091284438169}, {0, 0, 3}}, {
       0.101, 0.101, 0.2752271788904577, 0}]}}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 0, 0}, 0.5],
        "Ball"]},
      "1"],
     Annotation[#, 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 0, 3}, 0.5],
        "Ball"]},
      "2"],
     Annotation[#, 2, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 3, 0}, 0.5],
        "Ball"]},
      "3"],
     Annotation[#, 3, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 3, 3}, 0.5],
        "Ball"]},
      "4"],
     Annotation[#, 4, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 0, 0}, 0.5],
        "Ball"]},
      "5"],
     Annotation[#, 5, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 0, 3}, 0.5],
        "Ball"]},
      "6"],
     Annotation[#, 6, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 3, 0}, 0.5],
        "Ball"]},
      "7"],
     Annotation[#, 7, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 3, 3}, 0.5],
        "Ball"]},
      "8"],
     Annotation[#, 8, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{1.5, 1.5, 0.}, 0.5],
        "Ball"]},
      "9"],
     Annotation[#, 9, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{1.5, 0., 1.5}, 0.5],
        "Ball"]},
      "10"],
     Annotation[#, 10, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0., 1.5, 1.5}, 0.5],
        "Ball"]},
      "11"],
     Annotation[#, 11, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{1.5, 1.5, 3.}, 0.5],
        "Ball"]},
      "12"],
     Annotation[#, 12, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{1.5, 3., 1.5}, 0.5],
        "Ball"]},
      "13"],
     Annotation[#, 13, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3., 1.5, 1.5}, 0.5],
        "Ball"]},
      "14"],
     Annotation[#, 14, "Tooltip"]& ]}, 
   {Thickness[0], Opacity[0.8], CuboidBox[{0, 0, 0}, {3, 3, 3}]}},
  BaseStyle->{
    Specularity[
     GrayLevel[0.5], 100]},
  Boxed->False,
  Lighting->"Neutral",
  SphericalRegion->True]], "Output",
 CellChangeTimes->{{3.8413774468616085`*^9, 3.8413775367947273`*^9}, {
   3.8413776916795125`*^9, 3.8413777165968122`*^9}, {3.8413777525428586`*^9, 
   3.8413778454120235`*^9}, {3.8413778867772064`*^9, 3.84137789310996*^9}, {
   3.841378117672593*^9, 3.8413781575166407`*^9}, 3.84137827506396*^9, 
   3.8416359397942605`*^9, 3.8416359766899605`*^9, 3.841636204171801*^9, 
   3.8416364314919043`*^9},
 CellLabel->"Out[334]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+tlivJYEoOqYJTfjbSkq/CqfLSGjkc2EFdGiusGEsfJksLOokj4TBzf8vKxG
MEJjUNNt1JtfJmgr6MNlguyzbMRzLam/AKHKH8tFv1jGZvKQiuYs3DucGNsU
vU14jPWWiE55KKRhoT71imJCl4kW8tBX/XQxm6jamCVQ7fNlYVD9i+XoY9W+
WI7XCqj25Qr6f4C+UQSqfrEc7fj5cuMuvC8jY/JVZcwSYVJpTmHK+YI3ER6C
L2cxX7K/UbSjSEf6BLkDnz0X3cc46LJjXZMjxfIf9+qAewpZIi1kvyNDC8aP
ZnTzEJBmdJOlQS5uFG5DJRyVDuGMWWVhbENLMKqI9nIQN7PZT7gX2wHtx4ar
jkYL/2olUlX4V6vwNnYVWjR87Gp6BdW/WgXVvlpVDE27EuULGRjNSpdBtl1m
3KbZdLFwTXZLyaGKP8klKVEgvUm2RIwixeThOLrMKCgzQdKlvpLSvgvHe62/
5YdedGkrVGl0aWXXr9vLuyq+8fygKE5ds/2GT7TFNYsmlf9N9/c/l++h37lt
R5aDGmiyGl+vKQo1vvmbLPj1GrSgulYXgepjV6MnVmODriR7SmtKi0oPFZ4p
vVInVybWv4T+lNGPUh3UnDZP7MUv65mMSoHPk02DWlEPfDqb6sl3B4fO1DMD
LeiZRXot6SYrdpN1LD2F0zMCyaSFWdFbmWiqRFlReR8zp4cF0dnChQWh5jd/
Q81v10Kt79YF8LYerVlr3Hqo+d16qPHtOrzWhkH4N2uNYnj/Gw39N1Tnaw3Z
GKqNXR0gM2PObhlZMzDRroyeTLmjpXHxQUTEnCTcs+/YXDSWccBl3HiLZpWL
6guwzEJlEnjvvUpzuKhM+/QyPy1g8ZCg7hxdqRlHmGTDjjErKVZuPs4RIgsz
rB+1zpOZgTIsh0MIx3EO9zLot2sNsuQ6siRakaxZ+/sNeG0MQO0fNiGz4kuo
hVfNcRvwTTXQ6KUg/Nv1aOF1ZGu2tGVlaWnyZTIx+fDny+3+y+ady4xCj6Ai
KT0yMlVuqaoJbssmaC6LwdOTeLWkooZzR522flYLnrZ6GQsgsVDDrJU5Eotg
gVMkFV+IebR+Pgk8Ch8raAaxqifhzjcJlwIauWp1sioR7Nd296z53Tq2YuSP
m8MgcvyWANQRt61owYgft0DtHzdDrR/w+n5TAGqSrWuO28jW3SBsi86MV4Cd
+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
0v770eel7R0RnkXduE1CxpPPI5dVwed9FceAQh5tXPXwd2n3KLO5iVvFWbPY
niE9Icdee0uxZ+aK41nF2WY+FcfLgrqr7qZp9qC+rmXkmoLzL774qDfm9y0s
kGtJX6c6WRTNhfy+nwsp8X8e4Qy7nrR7KiqzDCrErLwMLTGUE7eTvVsrm5O/
r0W7o89noc9nLEe7o6JLRg2fOPssxCu7/3kMopTPS783bf+7v+3Z5ynEUwqn
VB1x/ZhljHvyhReGe9k9Ge3+kLS7KMK5V9n6TKJ4NVmxqfcg2bltIsU7V7OU
+3hv5W76upg8cck4LabrFZjwYDb/kWwufD1C+noUcjxVUWKnHEK7H0W7n2AF
3gBjNMmzxovzIXNFAfL5VfLtALRcD0Z5dvMWpskBMtHd09HsaZi0J89XZj8N
MWR2pPooafrIqUfdpre5vaL73dLlNar/VlI9PjKrOpQ6Lw771dvd70Wz01Sp
q8tIqq2PkWeLSq3pm9nLSA/thaXoQeWcNgEeRL3rpfXXlJT7dKFYS/a5nOz+
Skx2K5PXkBKuJodzodprSTdnk6MrUVk8kk1+AGJohoRK5tM0s8/9lyVaIzR7
0+VXmMrJxi3+Fi5ONm9m2vwqNMHw3phoXtkd1Xwc2/0kxEwjl0fb/2G3fR2n
7SncK5knJZ5J9Szv1qPd1/BiidcQ9hT2XvR09wZsd87eTEnntQvCKeea23ac
l3V2N3GGdtfiFh+KV3JugJW12YtwHmFdSjmyeRUp36tqC5KUzWlBUg1ejLSe
1o7RWiOx5ogkHC1Qsdl8N7r6XoiatB9iaEZsqnD1BAztSSjp6uedgRQM0akL
LqLdL0OT5STbKISznTFUN1sDRjnIRJs3xe81wSwuHbHRaOllSEGarz/Psnvs
9FNs+2i0fZS0faSy/RSn7XW63yOpfoeN6imECUm/iMcF/cVt9npo9nKW2V2t
OTzUXJzqqpfjrr+aa9Xckd3G8K5kXWd4R23GrLV7u/qr71vsXlWZfIxagyZN
/s0auf5sPU+lUG29tmnubZitUTQXzK6bXLF7HKq5+GnHhKvPxsg+9yzXXNIW
XUKFjkn5iqsBvIFxK1pYWDpzlfh/xgoQFl9WAKmYxDVAUVdv7nlIQJaPnXEG
L/L4U2j1kyTs/jxu3IlWV5Y/4rC8ZHtl9V90pt9iJnNC0C/2srrI2xsIi9u0
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
qIZ7iRYCDdawerM3VgscWP0X/9apbCdcZTVBh2txN81iPvb2sG4kC4ybGLMv
w7P1s8U5KvXbCkmr06zewdicvbAKvv6naThn6grPyZJTI4LidaANr08jXivy
sklaXUMTWkswylLhdKMdrwECK47KBz9/IGL57wcNG24nH2Z9YNwuxC6LXkGm
4qiTg+4zzeQ5htZxJ2vE5ETn0cZZDamP8MsXPFm1eaRohU8tUGgHPKmdgemP
YPyPEWzqidSE4EhViVZhOoCR6mBVv4TrVHeRdF0aoND6X4IVTjRDWdDaSr88
uVXkXwVvD+l2s8DphQEDB0G97A6cfvEEBXFr4x7aGcx643+nHPA/rdPFrSO8
loFa3EoW9MIpNfWg3dwKp7SXiXZ00HJfHaeLFU7HiC4YAqe1BU6LwYeEUzo8
k9iRL8bsjSwRbpMB3jpwzTxj8xePQ9e0A5hku0Edng/zyxdtRNqktngwIlJq
ukb6hrapU3uRwU0e5RYitIWFCh/XB81CJr/0gM8zCT7LFVQ6dRrxdr4vYi5X
wVNbvnCThU9Q+Owp8Unl204Kn3puJfGJ4Ss4kcJ7nF8NMkowQF9igLZo3wWe
ayQ6somtKRqRZuvnzV3DIeGeSx68idQbnA9a4ESKoc13ZEPaVEcrdSeY4HzZ
D5yGYtEPfx7NkKPDffmI3wAhsRhBkl+JY39LeB77ax0DKc6Eqy7PhCPyn/RZ
0/Bny5XQ4fmQqL3a2DNDsWfUA/xY1P+P2TNNxIdhWY/yTiuK/6ov2Sx8rNDg
6dCjhcX5TZI9dzR1L20/qmVSZ3pSrRXhN0iHaMgIPYdoP9PSJU9VvA9OoSKt
up0RWtlEaHKrLvB8E7FYQdCnbHCcM9hj9sB9pvmzzjPNbasrf3NNjKnU34XO
KNH3UaEz1wedtD58tkQnbUjeoKHzoEadP42W5w3vFeAjoP66rzhj8g687xNh
XDuJvJbjJHJxPK06hXw1F4eJ9Ff+2RZO/x6d91XXijpGH5TzA09LCk3XKDTH
pNBy/HDU7YA6MVGaSLGBeovR7ifSMbSCmFYNU7roi0+VL4Uyc7XBQaFei9GJ
QlXeRFUpyp2uEaOX/DFKNOqBUR8qHdaBSq1GSS3Wt+jQBbI7doPkNt3hhSxZ
Ym0mD2rRabS9k0alHtXP89O6cXs1LtZLrEqhOUFKfRh7pZTnjhXUH5H2K9Nu
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
8+sOpiDBCI8sp60WzErBANM5Uo5ziimCB7B9Golw4tdS4K4SfqrxDNoj6H46
kOwTKxEHSOvVqTGGbSD2KEt/A7BHd8R+HlbFzX5MhRVxP3Ua8hCwx8+eS2jM
c1MJPefP6bjaUuqOUnLVY2fMqy4vKxELK0rFoor5iM3ZQTM9Cg6pKS7/hiy5
kU2yY6V8omr5NiZ30wVG6sS0GLaByTF5bF9SxGbX82PZtZdZx+GxjcVBQlFp
xFRcVA4omyDYzWUQnquu1WQvf5m3uhae9gl8lMSngG7TGxCtgQl4ARr+UpTt
5MT3Ctlbch0nuyk7wsCMAGz07fmqiw61nuWh1uaG6nDpUEItgbXlXOPROceH
zpwbkYoA2MghR1eKl8jMiAJng1orcLZSIhKgR4cAnbAnZ+N7V2tF5aqyhec2
Bjz3MuB5JEfPITxf5IdnZ5H2vxU8X55BEShGQzbTfpH/yP0iMiny8+NtxT3z
mxnYbGeuj/WOldlJD1U+PMkYbTiJurHMWV6vEqBCY/g1SCRWMlokmzCjFilp
5UjVK1IirYQfi1Ih4xilR9H9lCJEGmRZ1FKNgmuqUU+3VK/U63OVyCa2S2NG
C/Wc5vXjXxwWiw9yjAXRWYkWK6HQlCnCF0615pgd/Li0bffMORCz/lRcDA71
30RsOfltIPbSshkmYh9Jxt3QZtIRFu3qC7lakuYgjNESYqayKSdismgHsXvZ
iH0GrUWWiJ2WQav09V/5d26iNeVBXLR2kbqWps0ItkyRGaEBjwNE5XuS2IUf
JGlfDokjl9wLv9kLSu5L4sMEPpfAF4PfULs+hm7YbWSBeJEC8ds0u8afSaW5
KcVtgPeV42dLwJ4iIovkdPdellzanwZJxAJ1ygVqLo6ndD+IXkZhADbNHy7V
gF0oARsz2SqDrSuQilNbsI3K86yT6mB2ItJ4rdpXjc3z01hdPhuwnuSA9V8l
WONq8QdxtbgCazkmkWabb0cee8k8nxiRLspCSxd59wcyF7Kxk/jqgZZiwshW
1sxZqCPd2z/f0N6dO/PM/iJb7jle6xpaGjah4ELAuoYkzqpm0gKS9aqNmUvU
9lIihfANgPDYpReMZZguoPvJSKaLEFbQjblhL5qtbjBmjtUr7U60XCelpu6L
m2hJB9GzRrHcgep/YnmXmKnXqsmz5+W4oLzAAuVlCyb9ElAuHSOWFmtpIwXK
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
N2ab6XQFL2YnIyIKsVfRfBa8fqH7m0CuuLs3V9wyHLGeqp0jct0khCc/HCZw
DV5lJfDbtrA1aFXz04Srw/gnYpZG8TTh3f4fSq2GL755OOCMIjUYkz9fLk8c
soUB3PKXx9OpJK/KTSjMPkPpw9ZTxnD/5rGtUrlpMnY7nKzjvoz8irKA1vHi
bpXcA/CKDYBFcw9K70qLhaxyWOm0WX6c2q5AoHlarFFtOGosZZmr8HqaihYp
xObOg2v1mEasm+FjzEbA2QORS91SjFUvT9OzeJCLsHPGDUdskSlPd7yzoh/2
ynk5G1iGcHehWoYgDS8YTdNL79T7AQ0v/+7TLVunIK7Pb6cNdOGM9borrJ7D
spDNBcY853dX2AP2rLrdDU/YeeEpvrzwXN/YXJV5QnCDgzVz5Keyaw5TF3Mn
fInFFdRi9h5qNX8/lS06TO1k0uJxqlhxnNqv5GvVCeqw+iS1X32Kyleeki6m
VktxVfGrV8pvr6CWfMiCs61XVlPZmjNUgXod69bOn0LbEutaAmLp3m+I7tkt
zEX2QXIPHazcQ+mqs1S8VIE2T/IO0LcnwkGbTPkff2ogqy+dejhH2rK0RLB/
mWAwxqR9pOq+vo/4ssLKOZfslbbKZwHuPvBIHVW76wzmClrv6/+YfMUbasJr
E4XX+5orz/7jjNenO6rRY+8IXq8RvOJmnWfhNcFqdoXXCxMo1aib1U3yZHUd
uXots3Q13fnv14JSNV7NzeZoW9zqD7vuBzuZa8vU7rZMNUncl1WI5yRwXYmq
GGrzUzMUuhSPCUoogKOgcwTAGYM2iaKowncHsnaYisNXBB/7KFn+4udqlvyj
I9Q/9NB1qAK2LWAhXvmbvfahd6kJJpiO5udpzDZ5ppqN20HN4FSa+DVfu+BW
gul00u7IL2SunZoPv49peghpPJYrJ+R5assaph0/ZxVrq6j9OqVVUNhuvZJF
6/Iz1GKJImo+i4/ceSe0A8kqbM84GAVWAVN/fdtA1QHqbje5awP1rWWRcg9M
g/sIilQZwvSVvKX7SsaF9JX4LZfBvhIN00ZVzcq7qTRVhrtv/df+aaX+lsAQ
mBqr2j8cq5qvJdA//NAU2QL5W7dF1DSLIFNU/+1lepeEhilefH7hsd8tb9JO
Kpr+LbVksdp24UEqZ5B2WHmSOq46RZ3WnKLOa/lad4q6rK+izutPU4e18Cqe
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
6nQVlfbuCmo0eBWrtDVKoTHCBF969noTbJbRU4Objf2CcsbtiFLO+B38m8ME
sMyPt4pfqTErt0YfbOYfNeWDTfx6427GXa2vKMAWxb0e+V/hmYdlJjoFx6DZ
OJi5VTg2VwId1Ooku82iwRzs6eN34UHwPAZYuoxb3xzkkpXh2x3nuEQnyTi8
k0wjgmX/cBTZ1BDrGioIH2xucNmfr4v4yJXInvtCInvua4ntuboRoUTn1G4q
7S5TrJ16KAeW7jzhAb5aqDeXdpU/l9b/HCsGVi1UVQy8gSW2iDT8YLMIsRQW
Yo04uIRpxpArlbGfxr/FNH7N0vg1S3NfsyheNH5hDLn4Fx9Ri0zOM+SSk0Tr
MXmRMEi9/QsfXnjujPJUOZu7MaTDqDry9rdeuXV9SGbMHz/6+VSTzvKkxBKx
ySuvkkCiKJiEd2W5sLkq6rBYr4jivchP5GP4e+QkcF3BX6DnU6+E2DqCzjUr
tlTQuoMWrN1Mb09ZEKcS8Jq3ScoPLLv+WSvNNdMaRaNCSrMiwLgmobkkpGRY
pVuwwnhz1lnUbMxWhhRAtV0G8uai2Q8ty5N38rVL5nY1RV1r9DZKG/WZmJYa
48zF8mG+i/luRug5bCOTCne3oVh9vttFkfno5ZJL5dGkcAD1xToAmWr8Lsz5
HXgK5PC2D25Jr0w/EHZYnwdkid/WhpY9622PG0Z+vMP4bbvGZ5bXb6s6lt++
66oa/bb+XYBWS0GJnpP++GMD6JbWd0pCTNUArOCxw6Oh+X/P4p5As5R/oYSZ
gW4nw+bJuRE3GQa1pYPHBqK2PhG1lTLiM2rEaktxa7tsSQK3kF/EL9O8YjgR
ZG6yT3LJLx9yy5Vc6oVR63UiFq2CFcu4UyeTfE2cjxWHJL7qyts/uYZ/SeXH
tWcEkl7B4DA/BFpuHj8oqErVVl3JcrWWeM8VVG2jLrNiNrMiilVJwJZYfuRq
1iGK2hHedIzhPf5HaL5DIoI/Qf8j9YUAtddHTbQLm8lh0aPSXlFQTFj2ic73
PxfI9yvTrZ5A9LBxdw/7jzBMG2olbpTmZOYF9jgiZsz4cCNlefi1TdiVN2EH
FUz6kgomf02FU3ZS4dRdVDTtG5ncXzTtO8qfsptyJu6kpuO+ZJZ9IcbLVMQN
uPgkxp3N8QT/AkC0y1nDbJK7Xi7NNQ/TkFQDz/iUvx3mEOHZAhGOiGfwc0KA
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
cDB7bPs/iSERXb4GtI8XA9o1GrQwK6JoHgTtBwza4xq0qC/ZoD0n1Z9abvXn
MmL8lfX8oEWMD9BuckELzhJt47Mdp0nRR8sfLJj1r8GxQSG0LZ2CtjEZaasq
RyYPMClDz8pOo+HZKSmb8FN2kDSjhKwDM4BN94/WVvP6Adcwrspc7bKYsI0x
22PUQ26kwYP6fB98Xis9JZSPu/RME3q2oUnj+vsKRW6WNHI/ULKf26Nnqi7j
1LG9WyCKKI/7+le0A8iN63uloKevMGQ5f0Jjen9ByHb6hMXzQs5JVjbUjeOV
NMXuYgzoV2vR1wgu1/J/j+wylhXpG/TZyO974PGN/N/5wOObZNfg/fxWacxU
4w96bAM/d+771wYwVp91irV/thhr81VnWKeEsJVfFfBqgd8BXi2whAw7C7GA
rPq8Y7JkqOaCD6g2tprqhQB1Xj9Jdd74jOos/ZzPF1Rbzimq/eYpqiXnK6rN
2KvNArO2ZmsdRmId8LXOW2dwOQvvD2MTs1rQZFza69K7OblQtPK7kAL553pQ
gurQqzj7cMG8DXto97Z1cfCU8WzXyueEtLHMtttYpqo2lpBB3ZqmLeT6j7Wt
K/9Syk+KqH+Q6rtLVP7Mj/T0iPpCCYkKkAtRGebHQNQXLKLqWtI3C5ioiwxR
UU/315Ku6lqSmzXd4Ab6AaI24WcX7WjC/wO0s0nh+rm9hKkDcC0LlDqUm5cn
U71dnsYs6Rp3pevwkZnaPhlPrrK7BPXH/J5Ejbv2IbORIDtUk4rWNIgcNvYG
7DCRW3EjT/mBA4cMkj49kDI3SMqR34+UeUFSQnJOcGeKIuiXK5iZNzqThg8d
iKNSo/W8lGjkptYwbDbWzqKwXYxhk/S08HQj/EBxKdRVNCpgDg9ic2oENnUq
NMlJZLuITBp0bopiku0asgSnG9Ff70X0sqT5Lb16VStNxqWsYH1MIbPc4wzF
ck9s4v+dck9slq2s5Z7cwp8KV3XfA3I28X8w3+JXaewUvP+JTbJbSJ2NHlv/
6LH10XUKqD7BujIAU12rz50vPzleRPBb6rz4bao8+6CsisYmx2qvvEvVsLVt
gdrgWGPRcaqx+GOqueQTPp9SzddOUg0+NV//jGq+8TmfL6gmcw7L42uxWJWN
jLVlWQE2LdXBQrZVp1FRWnUmgdkMpX3TZs5a02Zu8GpL1qQZtylmvtSWijq9
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
v7/EcN8vA1ZkOyEDs/or71INH+BPCuCbrvyKmjPgW649TW02nKUHt5wXTQ5t
3mN/EfU5fJX6MOR7HVKA78L3d9x5idptLaBWG89T83Vnqcnq09SINbus4MZ6
WNbssu0Q41MwXHvRCalQok55XCivrIm3KsRH4F2oa6l1DIB5gH9iRCtSVp2y
XCv143GP7uk+uo9d8y6Vn2nmfL2wPyEjCcpYM8D268FfpnS7tajD7C3Q47Ff
lKCVv9gG0OgdXj6M/zXa7OIuotXzVzr/2bdyJhLjkxTG7c0HRy2Mm9Agyd2Y
1LofKIluaQRsb5WFXcC4b2FXCVMqUhQd3adg3JiR/xGSUknTaQ1PoCuAF6PO
nSh17tFbUJzm0lvILdy+WTPcoremtuRd8E0aYitalw3JtyhaX09ZObm2Pg8m
WUL9jY6Z3O2a18frsYbSN6ScKSZVLiltwBVmmMkusoFr5E8Y2Q6Yzd8KIN1/
vHVciZ4Ebub2lDjg7XjwTqdeLNgzh43S4HbFeTS6B2t01xSf48+S0B0sioZ7
G4Ft8cFI2lyj2/XBJE9scdtIk3wwIUMPbV2e5IEJFkWRYlG6PDld/kYgXW78
L3rCljWZ5X5p6y8ZttXemENUhXV5VdblaNFH+2fthR9R3SUfU4OlJ6nRcoPu
bwXdSJ+023yBOm6/yBq8kFF9hZFNfK5Sj4NF1G3fZbm/486L1G5bAbXmx7ZY
f46arjlDjd76jhqs/IbqsT7Hpu+arxt0f6J2I8ARnoTw2C2uvySU4FqcqxT6
Xi3Od8jrF7zt+KUpYb7lyHEkWY4eB8RxlFhP09mXOTs/MPNx+S0GtSM3S1G5
YBvr4xsLc1/bVvDymm2xX1ku9WvqFB10Jy0YebfbKar2hSl74MeBfWE5NsDv
qPirH5cO97ZYTfwwxNsAfywK4BMUwLdM829QOPpsoE10nip4ng64FH2N+2Et
RoGmfS+Xwr9XmVRt1rR49U2aktM7FkbrdE3rnv0yjeRWtA6rbpYU2XG/4E6z
BLdBdgLXG2WXLt/McFmOo4Q3uJ8JfBt0W6mWuJ1qiXmKOx0MVxny0lGlzmRw
S9u/UtdpfnUtCntizJLYpX3MtlMrGcrG4uAGf4MZeYbXM2Lmvn4mRZ47FTMC
xgqxleYWbJuXhb7Z4y1klwDbNylsw9Piy443Cc2M/8psKlfIjqmuo06W2o7Y
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
+9ESdrOnmmbWNLI5GKt406ztLpXOyDs5qJRgTe/Ri+Z2K1Fg6HnyvE1Pguf5
OAhK37KoXACjYiedHWUaoudZuTo7OmMewVp04EgkAJ/I1N6gLA7D/tWVw2tM
MoDXPjkLWg1XetkWh3Vui8OGj9Or5g7q+SPJz2qX9fo6+P7g7uDTO71MB9+w
EH6ibGZKZm3dnXoudmpFKjv23JZg1XZt8gJOp54sl9lWMz02SbVa2zZg28mg
S2UB7LxVs9NXIqsmH8u2BaVE35mj8gCKmx9IbkKJcgGMVGM6qVBwswXxMkPy
UmQSI7NGbBBZX20U2SM3RUX2qM10o2WP3Cyy5KFbDNdUkUnvZ4zYKJoPWy+a
DlkjGpNgTf+sICoafbaSnkgNia4NP11BcF0hGnyyHHylI7Wr0q0qgVBb0pXJ
Ol8UzP9DWJOGf5Kzf/R+1dlVTyPrymsKo8BnJAaAAp8c9aeBoZeDoczUM5Wl
p07xl9W3OVlyAJuuEnPydDgn5ZyhmFaYTMjLw6pYQWCMu8EIHcmXohTwry7n
TmtbUlNOKKpul0qou0BPq3B1xak2imsdHhoWSh7qlbWQkUF7C834T2Ye9zKj
EEXXOhYLJQ93yI44zUPgUOw+Q2ruDPqd6b0o2Iignskoqg3q44qRhRRf6AA+
Vde1nCyqcvJdVTX61e7sngr1gNk7Dw9c+FiiRAaDd3J/aDXGFQQ2xl0d2Bj3
MTfG3WIa4/RyrI0fS0++tRxr4OPtfhD5k43JdjJwN0tr27odBS5EWhIz1FUg
J1O4gnZTvrIdBXr+p5xG4XPiBiLS6o54YWSAi8ByEGhpyYiU0vIuO1h3AnWS
lfN9eGxIMhABN7KgzUgyAo/ZhMUc4l7OqC2i5ddbRavR20SrMYWi9Vh0s7Ye
i2dvq7GF/LGW8kRFzuhCuvNy6Euz6K9lfLVJNB++gZC5VqR/uSYm0j9fRfFI
o88KRMPPvMhU2AQyP3ZCfR3mPzJ8xAXmRdtXVa78S2X5ps94lk8c/HMEZiSF
gHkaH9OHlOjJSOMgPu6/MD7WCYjCr0hQbKo5LGMqCVpYVFuWmODCipn0J/0p
x0RYfi1/N1qCVCg6zrxRuLuBITgHCmZuM8yUvNyhF5LIuT2Y78B9CTvVVHt8
DEarc1GgEo1iFiwVMEE1QmVtAJPhuUsryTLJy+2Sl1pNesTkZW4yIvCOfFuR
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
2vg9QMlXuCvnfvX8Vcm3yTybqE3GWgGwlVcANLVXALhxOfCKH/3a4NKfdLT3
JNsDap5V4/3tlhi740+WtsNjaatO43VIqjYYr45soBOOFiqxpARj+puPwOhB
OZ41e+x2kTNup2g5fpdoNaFYtJ60R7SZsi9KlwOEyzZTD7IJsvW0Q5xfhHxs
rcsyKn7uOLeMUFlOqKwgVJ6lGLpS9F5RKfqurhT3ra8QD2ysFA9uqhIPbTlP
R7iQ2Wc1IbPAQWbnRVWi44JK0X7eGY6pW5GczCE5aeOS5STH1QHIpNhaysm9
rtKNjUt38tGLy/n8kNIrUuVbU5clxuWeYFwe3bclchlwKZOLDQmXkyUu78pS
yCRc1msldyxau2fNMKSAnoT/zQlApk40wudTDTK9WvJmr5bUhsfHNC7f9uDy
A7eGfNrSkCZ2/sKsoyBMOoQknjEOcT8jNoIEwGCSF0bWRqBEjxb8bfwhfIq+
RBM0d9A0MWbFNj0cgrAZ92JTEjNukpJKYta4dhMiMWO2xJQ2dITch04QIksY
kNcGOMsbaDPQvAnspmEz0MeJzEAJN6UkNgPZ9e3VVn17uKlv101iX1RNWmys
9QD7nPUA7rA7PfXqG9yotNKOsj7zmH9tsl2f4S0ofheQTDuGhdwhbTRvTHfK
2aouw2vh9arPwUu5lI1tds2GruM97i2+2iQyR2FCa6GcYo31xpOKRdspe0W7
qftE++kHRIcZ6AYsEe1nHBbtZ5bQ/dF+5pHIj0hGQkoeU0dLSsnJroqTuUuq
RC9MuF5VRXKyijh5Vjy89ax4dNs58ej28+KRbUI8qHjZn3jZl8JwzcvcZYqV
+cRKCr3bUujdavYpyUqSl1kOL+n/iQRm5FshvPTnIAPzj4aVyjNJjxn7JUmt
0+NdPnfttgtiJYXcFJyiLtPcVb5u1vsRwmUmr+gORGbDdgFbGAPauLTxx6Uy
NTK16cdji/Qi05uCNArTmcoOXHItxoXLD13q0lGWGpUOLvnlXk1utzBJvzui
YpQhGZNhE5/RRNTbXhodw/1OCOMZ7xAJ6gtufeHriPlLRFV8xxcnLmOCKvXp
i9d1JjNmy80kuneC9WYgQHccOh65PiAET1ewXLlgAq+mWxRkBlp5IWagJKra
C1RVe4ipatcNbcVJYVJ+MfQLkXtvN5HR4nciJ/M2+sprb0mny+8a06187a1N
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
PEuPSM/lZ4mrxM3FlczTTuAp5r3ng8ntF1TSo96B+NpxEX0eq4aWVEYBW5IR
nemvdVkmsYsCvsyYVkqx6sJqOWH1NGE1EK2SrN9SCVSPhZRb7g+4kqe8ZkOF
/enDVNhPDxDa6x/8Kl+Ul2zhRk+g8eheouu+wvKjJQf/FkrYzgkJe6h4M0nX
iS7pqstTgXQNyPjb2tVf5vemVFV5KsgTZXfZGx9+EuG/q6MeqVQvXb0l/fF+
zaoNom9Kzcr5U9aqnD9lqkq9KsnKOjVjyGq6fwiqInPYWpE5fJ3IGrEhKrK/
2kgSNXPEBkLtOtF86FoCLcmGL1bRb6Tx5wUknOBhgfcPfhY4qJEZbzB4eQxP
B7r1WN1+vEQyd5Bkrs1bqWZV8hWJV65nTeaXDYhz/PCjl235uyrzr5g/gce/
hfujulr+qJCBI78JpmxYmT9PlvmxwvzdJ+tZhA1IoXqa526sttgUEP3r+j37
mno6K1azpGIlFLjh2t8oUGhVqU7jzppqPg9Jrl6utlarzdW8cvARcRMOvc2f
wypCsLftA3n0k3SQqP0/qWPz8DPdhAyrHk3vmmsS1I1vYdY70+SSYHa13IjJ
+4o281q3jNHbRdbYIpEzAaNDD4j2M46IjrMw3+mE6EqozSXU9lpaTg9Ur2Vn
oqLnsgqK75dVRK4S3ZdUiC6LKoisZ0SH+RU8KLk9/Yn2znaYAIqj38fn8ulg
2DzOIqJtx8WVkVr8obb06dawlPrpGgVe6cXOwJXbnaBcv+spUbkJa2cEHIvp
DlfrPXSrTKrOFfkj+4uTK9/kUfKg7MkDm8SxvRvRFFp+9MihBGvf+ifE7K4d
m8UTL73uFrGeLGvwfd7Z5VX5Xgs7PWBlWQPTA1bVyuOicubg/cfl0/dVrIJS
AwNtxI40dhSva+oOYzE19lJp8FNZrHqo9tN92mhQvpMK+AR4XU7CdYVoRsoU
bM0mkLYcuUm0HLVJtPp6M50tovXoraL1mG2iFf2ZPWqzyKLPZ2Ak7vD1PPux
6ZC1UbgEkZTFemz6FePWb/jpyiieB1GUGgBa5u4yeegWsEUupxAMbOdyPhYV
LpkymMg/Jn70FycseUaBtiB/ovjmudvFkrfq80qLUD/VngR+qp8nXs6RoOL/
6mN3+81SAQMYg1P7SQOWvVGRK5y6FKqo2X18gDXrY9o4cjWKO5V+KXJ5qyFq
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
QoKU4JvN55g6x1l9ZhGAJR5TWJXy/Gg0C8wCdjkZMPtUGuP11y68+uVsqWd0
QEBzli9LID0E6SpLgFcaPMlXbnnaGep7UGkDaAtoDOgD5LiWtBfnSX/AglOa
J1O0p60UbUnxxqqDe7ZF/hgK2wcUbNeHwpZTBwHa1tYYrlIX3/Heu92jbb0l
L1dH7HNOYspljg0pd+lxvroL1gNa3bFVM9DmWaBdoEAre7Sxz6fxZyuVtl1L
2nYDewZQykLKFanXDtC200nbzi4RveYeF30JroDsgyvOiQfo9F9SQcAtEz3m
nuCxwB2mHRBtJ+8TbSbt5bW78IHDR9Ns5LYo5AXdu7jtUfxsrJgr5a4tea9U
zNVSt8CUyLgsxhJX5hGwAZxzCP8aB9Y+b5m7Rv3tViy+Y/YFmrv0DJcwc9fd
1XsOQOv1bs8BBPWrj9erQbogtLzlScL2c+/J9eH1UeUUsPDa5Qm5OKpbgIgF
KntqtKZorMqeGdy89z5DwCW9ELmMgcmT1fWhz+Nrf9KbkZtHLxeRlpK3t/P1
Dmhe/ic4fWaviA7omOXkLO88DbMZuIcH2mNc6gWwFrGRTs7ixZxvMgqzkcFs
qtRtM9KEzSkMbzHO4W0m6casyQfpHBJZpCWzibnZ047Qn0dEFv6cdjSG/Sb0
0qNYq5Op7LqKybEryLbGbLbSg0vXKPAadeTrT1Xva4g9Sxtg7QmAOlvw5TrZ
rEVP5ZU7/uYkt/TdCSGwTxVpcZNbCdrzpDUqZrQUx7/JFKcLJ/uqYIf3bnsi
lLCPVkPYN1T2IEjKJq7nurSE2mzKN3jI4nEnc6A7XqxX8oRJ2U/8dLWbuV5y
NqOF03VmAF3nq1d+7S6Ud6TeRtF0yBrRHMPUv9rIJgEUs1qTlG03YRdnX7vO
OCBy5xwRveefEH0XlYn7llWIBwvOiwdWnqO3z4p+i8+I3kTZ3HmlRNmjRNlD
ot3UA2wAzxlfLDJJOTTHXU13NxQF7vQmmH02AjMiCLSRa7hdmiXuUC1x1znS
1iVrl8lMgpa09HNC6dDjUfnyNwv+oUYTLMr7RowbeJtY8la9AFtXkjuofnvB
LoN+vRo7aE33p/+9lhVXwJTtRioaXN1Y1UYBT37AjVSZbUWs70aqJGqqEquK
qBg2xLspno3iziVC/AzqoB8fvNfv+Si/mcKyAV/LhO31V6ZrjqTrHdJ5wJrZ
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
rY3R9kSXxVXIpWLyF0nBoAjfwlyrEn/wmHHhx2zwXMT3aiWPrCc7Sj32mB83
rqxwZ2PVO3M3uMnjiHQciVYt1HEnWEydLI5y7DKyXtmxqWNOtP7jbTXoTjMD
XAsU7ma4b5LlR52JLufY6XaCJSOcVnJDpw3ePO0Gl2KUswJiv10L8aM2QsKY
LZA0biskjd8OyRN24FVGv8MJJLuUOKEMEseXQYK8aFE7mgBEwuEIoUjyV/hW
7OFHDF0bRlp14fRYwAhWUGgl690I+iwXWZhGHdqTECHPtAL8PahwZ6JEznv9
7oGyr11SJf/zoo+Ut5vllLc7b8vbUaU5JlTRJxRyjtSKnIq9e3bTvV2T8NeX
RExN8XTaky5ZeTEvasXRfHepPYj3DMj5KjRyHJ3zOWbkYNDaBp8dbdmvaA3/
5iPpUfTdFoges51V7UixKXHaIfYT7jJbGLdnFJ2BjAXnIGMhXechfcF5SOPr
AqTglcz2l2dZDj5xHqZACfPOY/SSyAgqV+wJo7UGwgrmZAmYSIVBAo3h6IQJ
/BA6WU2rcl/QOMs7enhzUIY3Oyi8qekzcf2LWkolQptIuznuSKVMZWMHYPD2
QLxgSmWFNDpgLLFDPZUyKdb8w97Ucveo9Kb4Y29p+iP1AIx7I+s1N2CmmgFD
6zI8zLUI2mJoE4mhTRSGNp1GrGfAdEGQpEzaBalTdgchbepejEpSp+6FlCl7
+OrC117eEKSZr85jiTNb8M7azA+1SHLCIl2kYeuDBBvSBCGXDFYJWYs/2bZD
1xJySAZE25rnwEffmudd0gWywDOzAJGvkDPJJRNCatWkNOiQF/7fFndCCsYd
KAtE+yLnZomcjRZyTtQPOUG+zVtXTJhdxLcf13f4uWbS1dRaoi7tOBKH9dR2
NOL4z+qYiaMcTSm3jsBfbDvy9Rm+kU0rSHqdJNdJQzMOqZMw7SAkInWSZh1j
cRASD05hbbgz0AWvZL6IMmchofAMxGO4EV94Bn+E8YVnMcCOn3sO4uedh3gS
DEaKJJAWHIY8iSR+RPiJL8KXuKKKQAMijqglywupg7ckMkdUlG9ytrG0UWNj
XDN2N7T7bjsN41TMWLUtIJiTwszRW1ZWUKOJvoXgjZZCKdZka66juVr5Rq8e
D/AZCv2PtqLwosPNxNGqelIzffq7izeq2enLm3EG3kxzDXQV2moLaniUeuEY
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
lenS2FNd0tjawt3D15AoN4lopGJS0ZKa1Jc+5UEh75KuaLw6ZjgKtCLIa3ok
MiNEJGJnMq2NXRS7XCqKIGXGIkgIogiLaTsiCRIwiDAzVF3khEWYGcfFZ5uI
xMUCiq18z/eLLHP0m7J5gB9PAs/CblepNBRanka0PEdo6epEy9uIlvcRLR8/
di/Qo4xGEYf+40/wUr+HJWr01oyu7pjtn/J01uoljt6tz5hpiIjlbusJ86Gm
e65KreaWjMcK2KqXeFfpxJCY3atVrRirxEqbUDLd0aMVsREllrtp5rwzRiw0
BEbL3cmYw6RiFJKGuKGSasaC82QPDFmLL7KETRbZaS66yJgheYkutOyNqOk8
kxYbjsnR5KNiRmjaEc6Zg5w/3ySQI7Aj3VkOunCzR0YvMv8h1AxdU3TvUx8p
1CyW9ZM/KxWBCZqKgJ9E5NXWT/bmOh3MeO0uEcqpfuLQSnKs3T3koM2u70Wb
W2T9JPXFT8VDTE2LhayZjLDuJI573XGLu2biKbXWrWZiznn2+ZRcZf1ERTCM
G4Ec4gu+3iipIsli0eWIvGUOGpwIN9f0mbShry9l7gxNmTKNMl/YlClAyryc
dye8SpTpqVHmUSdlhv/7zzDqmQdg3HMPwqSCh2Day3/h0VUHdTwGhlZwI3Ok
Ls7mjps4LmFrr+l4bYUW76SIVaV9cYS3uaOKLG4FEvL4+cQ27KUlGGH1sowX
YQRtRPO3Hck2DiPaiAILbfnTQq7aweTAhogz7SCL2CRjcENN3rR5SB2aZEfq
UEmWRGwoL8pE8mRI4qSSoE3ReZaZiEfq8IKmWKcK0iQzPbnsu0fccmFMn+ul
4ZxGHA5udonkmVSvBG0K8HehaFMsKy33/+pGKH2/JSsJXDIpCYRQhaxvpcUl
jU1j9aZKi1zBCzwYijYn60ebH/BJurdi8oJSEdfQHYXPMHbvfcowHaKGyV6x
h8nU3aOvw9RWXWnjagFHcEwjGzvGLMmOa/A3GeSEOEwPbcQjpxHfBE3FoNmU
wzJUEXeBeuZEjlNmPduIdjRY2tvV123oh5EgcQRjGaLI0sLvmCIfP5PkpEi+
RpF+Top8jRT5Finy3dMPwFikyESkyFSkyMxXm0Hh682h6K0WsPjdRyAyKVob
M0lzlG9vl7aoxtJtvLJItVvGnC6xsYI3ZbIXK93jJe/Y88nuOMYxWuIcehcm
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
HYxT96lbJtUzeEQJU73Mi+q5PzfVxR1uXIiW/LJtL3hGNMp3cq/GdNn1p97z
LpYxb83rRXOvFapLXOs7aHVHnLEhqI3cPhaP9t2+OhVpPtZa0Kxt+wS3bU+c
LIeGiolaU4801H3vvkaC2F79MHQZPnILEvthX3vB7F2S2SRXrh5Y1yAtj310
kUL3A5FDd8+pFaIRBiq3rI42ulyl8fbVn9behjsSrYnRlQ0lrbdWRdM7v/qO
MOtnN23b7nsg3AyssNx21tCHaaI5n0Za52QM20yb8+H2TCe3syW3c+rEbb8u
n6+F0amK0S3TeDUl98YUO6fWeLHZKIn/q1kSr0rfzJvwumTliM1zXGxWGzJM
NsdKw21js15Pai5CNtatG556govNktFTBKMb6p5200gfso2uchS3+NIEn3er
Aldqcf1ctrg6Q3CzxVWF4C7//FrvELyWvSnkGZjzK2SHC1RtXQOrad4dF6rK
dnWrUCU6XJKNnW++y1bJMxFB8++cRtofjs1+zWa02Vuro+kdOe1bqtSfY1Zv
q9juu8d+jRaRy+Hq4OvQEBepG9YcheE15aZu86mMOnjF5bkGlxdKLi9xcjmv
vlxeIrnc445MweUg2hcRdRc9Kxzwri96jP4Ot6RNjsU0Wlt0LZtR0fKw487b
vthcTG1WE5v1IgrF48Gr2AFnHtNCLemA8zItY82wudBcOOCSx5YDzllxsrEe
XI5S8y71LBpOpes5dAeMlLoYUtFm1BYic7rg8h7J5btvNfpUnUOlwq68N7l8
jXesvc8j1o40osLqVoE169dH9LX9tROajXKUh1H2orFf+9pR0ihvrW4Mq7ZW
++mdnwkdrQm9ZmslkfkOx5V4XL1KWZ0V7Lq9pbezvcXd5hapyT3ShBsvWrtn
XRi01qUuWW5al/9MtM4T8XXg4qtv4vy5GCoXbu+ixx563asuKP0HbldxVqXb
y1NrXcmpd+Uts+2Vsa369aB0vEFpuTLcbp4n2MwzxdeTDmKkp2gtHW+dTKdh
tmKWdiP7HG3b+JkqWprFZjpDUHufdLt1I+qE5LqNmToRoRFVBdT7wwTU5kRJ
rykUlath7Yb1Yf1sv86SOfzsC6G0X1OaXqqjiNL4sq36YnzZgYeKb+lr+lnJ
TxVTfXNFJUfZv7sgnnst6qhfG5ujnz3cTJt6T7IKw/P5vxDPi1goHw1cfM1N
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
/e8QVWZR1sWWqextllFZmUqxWn6gzFLKRJjTZXAe5qfOwxQr5fVhfrsaZXMt
yuYG7jyKR/zbIa3ajd7OB5ogDzSxhC42E0toKaVxoPJmK1qEd9aBiqg8inNa
nD5BF5gdYTJWRwXh1emKb/iaODxkKacTDxjumQxS0E+IHbbeChVfFWfK730P
8x2K5rpxd6KXqarE/HPGhi0zFLR5wJN5nptwwTx43l+cZwxXe4q1xSSg1LlF
7T8UTFEvAhVD05lSdS1V9iXgZ6G6owQqHeOClr3sDwkhFQLKHOXztM7UT6fE
fK9RoijkFb+WZKlNmadq5Igy1BlWi9zUdxvQvf1SnNtr5hk+FLj46ptC1MvA
hUeUpHXeEv75Q5HiIGvvWppphtPebqy1eX0htwWrrWTmGaqN69xKhXKp1jxz
ZTKf4w5Rs+U6R3mGdD9kyaU8kyghY3xONejJJokcUo3vUnuUbBh0m83BH4B2
RxMZ6aheN87Nz2/vDlE1EQmfvnYwr8BZMyKZ+/WXa+vNxYiyMkFHv/bQq4Vu
iJLr6s1DG7xKb+xV23rVinpxcNvDHBxXU/nEZWcDt/Cpg2Pxo8OriZaCiIfZ
2OHQ73PbZzyre+VZ/cM4qyh++2CIyqqUgN1pI6nDc1ck9TTGVq7G2i9unJO0
INSXzn2Tcq84kZTPKYyAkZeszqldWAE7KEgmziqKjiVaHhUe0CWRE2Ccctkm
mPi89BD/aZxSNL+9P0R3kqTKhDR521lBwSGia9JDjdnNgrmv1txVK0/oW3Pz
+ga5dX2LlKYKLmXlU+Ii5R2OUxKqLMGlyg5G0WmQJyM0mvGQkNH3LrFdwpu5
EStKZI+a10rzGb1hnFcDfntXiK7ZmX06QHnPHgvKzXB6a73OxprM81BXpsoP
o67czIsgUcy+vYJ8UcZxcc3IpIMN6dToG9ZVg2TqRcZ1QzXjQXd0iJl1MP8y
Dqah9IevvC+Gb3W0f+EpREPdQqRpVuqg2bxaaRYraWYToh+kEMlDcQlRyR6b
ICUw3ZhypKQmHfDz20uMW+W9Vm2hmc0csVlsIb/9QXESbxqnchG/vSfQ+Ppb
Q5RP41N56j0rga+sm6F8qKuOh4fK2iRvUTG9raUu78AmKrROfZSlfOINUaF8
oHkq7Ur2mN6CEpuECfvVOaAzQK+NjKIVVQ2mpGSrXd28ZZxHI377+yBNAiSj
pb0lvVDRMFjqfpylw/Q8Q4aK8VDCEVWMnTa2sxASIqoQ/VyQGKWsF31a+h2+
XmqULBp1BrLAStTCbePiKvwBtFf+tnEIjcUh6D3h5iGQ1ddWW1PEYYmcFlu1
Uxp6I0ZabL0L3Isi+hC22/QHHoSonI3ieswoAbEo/JM1mo3w27usgmguAkTo
VXJ/2DpyX8Snfcf45Jfy29uCNPmTaWB+6hcHSsUwgu2vLot4Z6KVpTdylC5t
OTDMp3ZA34a7BSucn9zHzRTR/OEvlXCqp9rWH8NZRL51XR+6r9/XGuJ3jQ96
Gb/9ldhYzZ7sZzyEgKE1PqR2MhTPP5zu+JD2qMoOrUO+LXj99EkROI3wD9tR
qeEH8ONLFaJn9vqYXQfyJtlSZu8bH6oZv71FLxHmNBGGN/eznRsu71cMWfXy
LiVqQlY9COtETn0oUmIjt/j4k11EPzMaKFY1qtmT+yV4gz3GbT3FT/yh8dNf
wW9vEj89qV6WuUGsdrVvrINc09+baTdEXy1ywKF+ervcUbUE/lDc149Q8M8o
movF7/Dn52Iks0F18MoQWgTKjYif+WPj579K/PxiB23LNGFM0WzogOhfJl+s
k3/sE4e/6vz59aLzVfIzrLY+x9B10TwWpCEEdBP0KrHBecBindT9zPgxr+W3
1wQu+dV/0bgsQWtKzDgVmUFpZetbqDyC2ihNQjKgXAwF4h91WQNKLKAsG9Ms
Qnf/5VNeJM3//y+Nn+VGfns5jbUIXh/ICf2+28vi5+DR3D/yGhDRT1RqQW3O
GKDhmmJFL03h/nIB/o/lwDe6NcOne+Cy2+4T/7MBxv/4Vn7bKNDk1jvFtkfe
9FhIXSD4dKTljkH0IPHp7PMHb07u4oui9+JriZ3EP/Kt8Q/yy4r//cL/fuH/
6y/4/s//A3Jl/r8=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"408b76fe-d61d-4fdb-b006-720d9975f490"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\fcc-crystal.pdf\>\"", ",", "%", ",", 
    RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
    RowBox[{"ImageSize", "->", "360"}], ",", 
    RowBox[{"ImageResolution", "->", "600"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.8416362070194445`*^9, 3.8416362105677786`*^9}, {
  3.8416363138244934`*^9, 3.841636322034584*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"d39fdafe-3dd4-40b8-b185-6f1be05902ee"],

Cell[BoxData["\<\"C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year \
4\\\\Introduction to Condensed Matter\\\\Notes\\\\Images\\\\fcc-crystal.pdf\"\
\>"], "Output",
 CellChangeTimes->{3.8416362398338413`*^9, 3.8416364387372417`*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"b12a74f7-e36e-4a6f-9b0e-15c560fc3d53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CrystalPlot", "[", 
    RowBox[{
     RowBox[{"3", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", "9"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AtomCol", "->", 
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CellLineCol", "->", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CellLineRad", "->", "0.1"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.8", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Thickness", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"{", 
     RowBox[{"0.9903231323278796`", ",", 
      RowBox[{"-", "3.0236035887146295`"}], ",", "1.1519902047709918`"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.841376259270096*^9, 3.8413762605660076`*^9}, {
   3.84137644112452*^9, 3.84137644224629*^9}, {3.841376874580188*^9, 
   3.841376889091044*^9}, {3.8413769483383446`*^9, 3.841376960786975*^9}, {
   3.8413780689203615`*^9, 3.8413780718942146`*^9}, {3.8416360080678577`*^9, 
   3.841636027838914*^9}, {3.841636544325094*^9, 3.8416365567255287`*^9}, 
   3.841636608114678*^9},
 CellLabel->
  "In[342]:=",ExpressionUUID->"42153164-d01f-4b54-959b-aafba2fe89f2"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{{0, 0, 0}, {3, 0, 0}, {3, 3, 0}, {0, 3, 0}, {0, 0, 0}}, {{0, 
       0, 3}, {3, 0, 3}, {3, 3, 3}, {0, 3, 3}, {0, 0, 3}}}, 0.1]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{{0, 0, 0}, {0, 0, 3}}, {{3, 0, 0}, {3, 0, 3}}, {{3, 3, 0}, {3,
        3, 3}}, {{0, 3, 0}, {0, 3, 3}}}, 0.1]}}, {
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {1.899091284438169, 0., 0.}, {1.899091284438169, 0.,
         0.}, {3, 0, 0}}, {0.101, 0.101, 0.2752271788904577, 0}]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {0., 1.899091284438169, 0.}, {0., 1.899091284438169,
         0.}, {0, 3, 0}}, {0.101, 0.101, 0.2752271788904577, 0}]}, 
     {RGBColor[1., 0.7254901960784313, 0.2980392156862745], 
      TubeBox[{{0, 0, 0}, {0., 0., 1.899091284438169}, {0., 0., 
        1.899091284438169}, {0, 0, 3}}, {
       0.101, 0.101, 0.2752271788904577, 0}]}}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 0, 0}, 0.5],
        "Ball"]},
      "1"],
     Annotation[#, 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 0, 3}, 0.5],
        "Ball"]},
      "2"],
     Annotation[#, 2, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 3, 0}, 0.5],
        "Ball"]},
      "3"],
     Annotation[#, 3, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{0, 3, 3}, 0.5],
        "Ball"]},
      "4"],
     Annotation[#, 4, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 0, 0}, 0.5],
        "Ball"]},
      "5"],
     Annotation[#, 5, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 0, 3}, 0.5],
        "Ball"]},
      "6"],
     Annotation[#, 6, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 3, 0}, 0.5],
        "Ball"]},
      "7"],
     Annotation[#, 7, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{3, 3, 3}, 0.5],
        "Ball"]},
      "8"],
     Annotation[#, 8, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.21568627450980393`, 0.5513725490196079, 0.7145098039215687], 
       TagBox[SphereBox[{1.5, 1.5, 1.5}, 0.5],
        "Ball"]},
      "9"],
     Annotation[#, 9, "Tooltip"]& ]}, 
   {Thickness[0], Opacity[0.8], CuboidBox[{0, 0, 0}, {3, 3, 3}]}},
  BaseStyle->{
    Specularity[
     GrayLevel[0.5], 100]},
  Boxed->False,
  Lighting->"Neutral",
  SphericalRegion->True,
  ViewPoint->{0.9903231323278796, -3.0236035887146295`, 
   1.1519902047709918`}]], "Output",
 CellChangeTimes->{3.841636611156578*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"38d23681-6fe7-43ff-a20b-9a42978358bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\bcc-crystal.pdf\>\"", ",", "%", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "360"}], ",", 
   RowBox[{"ImageResolution", "->", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8416364489144993`*^9},
 CellLabel->
  "In[343]:=",ExpressionUUID->"fd584287-6471-4b73-a1ba-61bb7f4e7d04"],

Cell[BoxData["\<\"C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year \
4\\\\Introduction to Condensed Matter\\\\Notes\\\\Images\\\\bcc-crystal.pdf\"\
\>"], "Output",
 CellChangeTimes->{3.841636456563445*^9, 3.8416365779844832`*^9, 
  3.84163662606525*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"2969d23a-97df-4797-b91e-7ce744cd2ea4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0", ",", "0.5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", " ", "0.5", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "0.5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"(*", "*)"}], 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"BondRad", "->", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AtomRad", "->", 
    RowBox[{"{", 
     RowBox[{"0.7", ",", "0.4"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AtomCol", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"ef910bf9-d6c7-4453-bcb2-95471b4da330"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\rocksalt.pdf\>\"", ",", "%", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "360"}], ",", 
   RowBox[{"ImageResolution", "->", "600"}]}], "]"}]], "Input",ExpressionUUID->\
"834e0953-c5d0-4a10-8e20-9c71dd4f657d"],

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"(*", "*)"}], 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"BondRad", "->", "0"}], ",", 
     RowBox[{"AtomRad", "->", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"AtomCol", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"4c083f19-0feb-45c9-9af6-badf35670d56"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\CsCl.pdf\>\"", ",", "%", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "360"}], ",", 
   RowBox[{"ImageResolution", "->", "600"}]}], "]"}]], "Input",ExpressionUUID->\
"187b27b7-7aa4-442b-98bf-40d02cd2c68f"],

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"(*", "*)"}], 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "0.75", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.75", ",", "0.75"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "0.25", ",", "0.75"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"AtomRad", "->", 
    RowBox[{"{", 
     RowBox[{"0.4", ",", "0.4"}], "}"}]}], ",", 
   RowBox[{"AtomCol", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"178d835c-6727-4d6e-9913-145decc3190a"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\ZnS1.pdf\>\"", ",", "%", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "360"}], ",", 
   RowBox[{"ImageResolution", "->", "600"}]}], "]"}]], "Input",ExpressionUUID->\
"722c75d9-c209-464b-ae5b-d18d3ac528de"],

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"(*", "*)"}], 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "0.75", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.75", ",", "0.75"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "0.25", ",", "0.75"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"AtomRad", "->", 
    RowBox[{"{", 
     RowBox[{"0.4", ",", "0.4"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"PolyMode", "[", "4", "]"}], "->", "True"}], ",", 
   RowBox[{
    RowBox[{"PolyStyle", "[", "4", "]"}], "->", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Darker", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}], ",", "0.1"}], 
          "]"}]}], "}"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"AtomCol", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"5", "/", "255"}], ",", 
          RowBox[{"112", "/", "255"}], ",", 
          RowBox[{"164", "/", "255"}]}], "]"}], ",", "0.2"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#ffb94c\>\"", "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"2d146279-3f4a-4d41-a75d-6a80693c7ca8"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\willo\\\\Documents\\\\Uni\\\\Year 4\\\\Introduction to \
Condensed Matter\\\\Notes\\\\Images\\\\ZnS2.pdf\>\"", ",", "%", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "360"}], ",", 
   RowBox[{"ImageResolution", "->", "600"}]}], "]"}]], "Input",ExpressionUUID->\
"58f6ddc9-68e8-416f-adea-fbb51643e35a"]
},
WindowSize->{787.5, 1197.75},
WindowMargins->{{Automatic, -793.5}, {Automatic, 9}},
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"08962b99-7c75-4ff0-b945-54a823ade2c7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 312, 5, 28, "Input",ExpressionUUID->"903b1411-67cb-41b7-8c98-a92115a37f26"],
Cell[CellGroupData[{
Cell[895, 29, 201, 3, 28, "Input",ExpressionUUID->"1f5bd74a-072d-4161-997e-75c4e90f53f0"],
Cell[1099, 34, 110704, 2322, 305, "Output",ExpressionUUID->"bbe1c835-e941-4cda-9d88-0ad901dd4540"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111840, 2361, 3088, 82, 86, "Input",ExpressionUUID->"65eeff01-5aec-4ab2-9e58-f8fb3a80df0b"],
Cell[114931, 2445, 429662, 8175, 377, 221208, 4757, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a129c322-31a8-45f0-8891-64be7ec9e0dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544630, 10625, 960, 27, 48, "Input",ExpressionUUID->"9785822b-e66d-4bbf-942b-040ce04570c1"],
Cell[545593, 10654, 2777, 90, 377, "Output",ExpressionUUID->"71ae3022-774d-4aa7-9025-e45f06b09a06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548407, 10749, 3035, 73, 238, "Input",ExpressionUUID->"108b8506-4ac4-47e6-ad0b-857b19a8a3e9"],
Cell[551445, 10824, 292556, 4847, 377, 4359, 122, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"408b76fe-d61d-4fdb-b006-720d9975f490"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844038, 15676, 605, 12, 105, "Input",ExpressionUUID->"d39fdafe-3dd4-40b8-b185-6f1be05902ee"],
Cell[844646, 15690, 314, 5, 52, "Output",ExpressionUUID->"b12a74f7-e36e-4a6f-9b0e-15c560fc3d53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844997, 15700, 2681, 66, 238, "Input",ExpressionUUID->"42153164-d01f-4b54-959b-aafba2fe89f2"],
Cell[847681, 15768, 3442, 92, 377, "Output",ExpressionUUID->"38d23681-6fe7-43ff-a20b-9a42978358bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[851160, 15865, 504, 10, 86, "Input",ExpressionUUID->"fd584287-6471-4b73-a1ba-61bb7f4e7d04"],
Cell[851667, 15877, 336, 6, 52, "Output",ExpressionUUID->"2969d23a-97df-4797-b91e-7ce744cd2ea4"]
}, Open  ]],
Cell[852018, 15886, 3463, 86, 200, "Input",ExpressionUUID->"ef910bf9-d6c7-4453-bcb2-95471b4da330"],
Cell[855484, 15974, 431, 8, 86, "Input",ExpressionUUID->"834e0953-c5d0-4a10-8e20-9c71dd4f657d"],
Cell[855918, 15984, 1768, 47, 105, "Input",ExpressionUUID->"4c083f19-0feb-45c9-9af6-badf35670d56"],
Cell[857689, 16033, 427, 8, 86, "Input",ExpressionUUID->"187b27b7-7aa4-442b-98bf-40d02cd2c68f"],
Cell[858119, 16043, 2482, 63, 124, "Input",ExpressionUUID->"178d835c-6727-4d6e-9913-145decc3190a"],
Cell[860604, 16108, 427, 8, 86, "Input",ExpressionUUID->"722c75d9-c209-464b-ae5b-d18d3ac528de"],
Cell[861034, 16118, 2976, 77, 162, "Input",ExpressionUUID->"2d146279-3f4a-4d41-a75d-6a80693c7ca8"],
Cell[864013, 16197, 427, 8, 86, "Input",ExpressionUUID->"58f6ddc9-68e8-416f-adea-fbb51643e35a"]
}
]
*)

